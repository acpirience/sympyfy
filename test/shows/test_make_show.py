"""

test for sympyfy.make_show

"""
from sympyfy import Sympyfy


def test_make_show() -> None:
    json_content = b'{\n  "available_markets" : [ "AD", "AE", "AG", "AL", "AM", "AR", "AT", "AU", "BA", "BB", "BE", "BF", "BG", "BH", "BJ", "BO", "BR", "BS", "BT", "BW", "BZ", "CA", "CH", "CL", "CO", "CR", "CV", "CW", "CY", "CZ", "DE", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "ES", "FI", "FJ", "FM", "FR", "GB", "GD", "GE", "GH", "GM", "GR", "GT", "GW", "GY", "HK", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IN", "IS", "IT", "JM", "JO", "JP", "KE", "KI", "KN", "KR", "KW", "LB", "LC", "LI", "LR", "LS", "LT", "LU", "LV", "MA", "MC", "ME", "MG", "MH", "MK", "ML", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NE", "NG", "NI", "NL", "NO", "NR", "NZ", "OM", "PA", "PE", "PG", "PH", "PL", "PS", "PT", "PW", "PY", "QA", "RO", "RS", "SA", "SB", "SC", "SE", "SG", "SI", "SK", "SL", "SM", "SN", "SR", "ST", "SV", "TH", "TL", "TN", "TO", "TR", "TT", "TV", "TW", "UA", "US", "UY", "VC", "VN", "VU", "WS", "XK", "ZA" ],\n  "copyrights" : [ ],\n  "description" : "Talk Python to Me is a weekly podcast hosted by developer and entrepreneur Michael Kennedy. We dive deep into the popular packages and software developers, data scientists, and incredible hobbyists doing amazing things with Python. If you\'re new to Python, you\'ll quickly learn the ins and outs of the community by hearing from the leaders. And if you\'ve been Pythoning for years, you\'ll learn about your favorite packages and the hot new ones coming out of open source.",\n  "episodes" : {\n    "href" : "https://api.spotify.com/v1/shows/6Ol9sx1lONDxBSffLW9qcZ/episodes?offset=0&limit=50",\n    "items" : [ {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/7zbTPaupCVUwal4VphJ4Cc/clip_1496360_1551350.mp3",\n      "description" : "You\'ve built an awesome set of APIs and you have a wide array of devices and clients using them. Then you need to upgrade an end point or change them in a meaningful way. Now what? That\'s the conversation I dive into over the next hour with Stanislav Zmiev. We\'re talking about Versioning APIs.  Episode sponsors  Neo4j Sentry Error Monitoring, Code TALKPYTHON Talk Python Courses  Links from the show  Stanislav Zmiev: github.com Monite: monite.com Cadwyn: github.com Stripe API Versioning: stripe.com API Versioning NOtes: github.com FastAPI-Versioning: github.com Flask-Rebar: readthedocs.io Django Rest Framework Versioning: django-rest-framework.org pytest-fixture-classes: github.com Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3766073,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/5XG2gdUW0YJ6iLmK7F2nHM"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/5XG2gdUW0YJ6iLmK7F2nHM",\n      "html_description" : "You&#39;ve built an awesome set of APIs and you have a wide array of devices and clients using them. Then you need to upgrade an end point or change them in a meaningful way. Now what? That&#39;s the conversation I dive into over the next hour with Stanislav Zmiev. We&#39;re talking about Versioning APIs.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/neo4j\\" rel=\\"nofollow\\">Neo4j</a><br /><br/><a href=\\"https://talkpython.fm/sentry\\" rel=\\"nofollow\\">Sentry Error Monitoring, Code TALKPYTHON</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Stanislav Zmiev: <a href=\\"https://github.com/zmievsa\\" rel=\\"nofollow\\">github.com</a><br /><br/>Monite: <a href=\\"https://monite.com\\" rel=\\"nofollow\\">monite.com</a><br /><br/>Cadwyn: <a href=\\"https://github.com/zmievsa/cadwyn\\" rel=\\"nofollow\\">github.com</a><br /><br/>Stripe API Versioning: <a href=\\"https://stripe.com/blog/api-versioning\\" rel=\\"nofollow\\">stripe.com</a><br /><br/>API Versioning NOtes: <a href=\\"https://github.com/zmievsa/talks/blob/main/api_versioning.md\\" rel=\\"nofollow\\">github.com</a><br /><br/>FastAPI-Versioning: <a href=\\"https://github.com/DeanWay/fastapi-versioning\\" rel=\\"nofollow\\">github.com</a><br /><br/>Flask-Rebar: <a href=\\"https://flask-rebar.readthedocs.io/en/latest/quickstart/api_versioning.html\\" rel=\\"nofollow\\">readthedocs.io</a><br /><br/>Django Rest Framework Versioning: <a href=\\"https://www.django-rest-framework.org/api-guide/versioning/\\" rel=\\"nofollow\\">django-rest-framework.org</a><br /><br/>pytest-fixture-classes: <a href=\\"https://github.com/zmievsa/pytest-fixture-classes\\" rel=\\"nofollow\\">github.com</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;_jmLqOSKIJU\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/450/versioning-web-apis-in-python\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "5XG2gdUW0YJ6iLmK7F2nHM",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#450: Versioning Web APIs in Python",\n      "release_date" : "2024-02-22",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:5XG2gdUW0YJ6iLmK7F2nHM"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/6ec5cVxjVU6XEhJtOSjOiy/clip_591550_639350.mp3",\n      "description" : "Building web UIs in Python has always been in interesting proposition. On one end, we have a the full web design story with artisanal HTML and CSS. On another end there are several Python platforms that aim to the bring RAD, rapid app development, style of building with Python. Those can be great, and I\'ve covered a couple of them, but they usually reach a limit on what they can do or how they integrate with the larger web ecosystem. On this episode, we have Samuel Colvin to share his latest exciting project FastUI. With FastUI, you build responsive web applications using React without writing a single line of JavaScript, or touching npm. Yet designers and other tools can focus on React front-ends for a professional SPA like app experience.  Episode sponsors  bright data Sentry Error Monitoring, Code TALKPYTHON Talk Python Courses  Links from the show  Samuel on Mastodon: fosstodon.org Samuel on X: x.com  FastUI: github.com FastUI Demos: fastui-demo.onrender.com FastAPI: fastapi.tiangolo.com Pydantic: pydantic.dev How Did REST Come To Mean The Opposite of REST Article: htmx.org Tailwind UI: tailwindui.com Dropbase: dropbase.io Anvil: anvil.works Flutter code example: github.com ReactJS code example: github.com Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3985475,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/4hIwNjzPAeSilYlbMaXkF9"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/4hIwNjzPAeSilYlbMaXkF9",\n      "html_description" : "Building web UIs in Python has always been in interesting proposition. On one end, we have a the full web design story with artisanal HTML and CSS. On another end there are several Python platforms that aim to the bring RAD, rapid app development, style of building with Python. Those can be great, and I&#39;ve covered a couple of them, but they usually reach a limit on what they can do or how they integrate with the larger web ecosystem. On this episode, we have Samuel Colvin to share his latest exciting project FastUI. With FastUI, you build responsive web applications using React without writing a single line of JavaScript, or touching npm. Yet designers and other tools can focus on React front-ends for a professional SPA like app experience.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/brightdata\\" rel=\\"nofollow\\">bright data</a><br /><br/><a href=\\"https://talkpython.fm/sentry\\" rel=\\"nofollow\\">Sentry Error Monitoring, Code TALKPYTHON</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Samuel on Mastodon: <a href=\\"https://fosstodon.org/&#64;samuelcolvin\\" rel=\\"nofollow\\">fosstodon.org</a><br /><br/>Samuel on X: <a href=\\"https://twitter.com/samuel_colvin\\" rel=\\"nofollow\\">x.com</a><br /><br/><br /><br/>FastUI: <a href=\\"https://github.com/pydantic/FastUI\\" rel=\\"nofollow\\">github.com</a><br /><br/>FastUI Demos: <a href=\\"https://fastui-demo.onrender.com\\" rel=\\"nofollow\\">fastui-demo.onrender.com</a><br /><br/>FastAPI: <a href=\\"https://fastapi.tiangolo.com\\" rel=\\"nofollow\\">fastapi.tiangolo.com</a><br /><br/>Pydantic: <a href=\\"https://pydantic.dev\\" rel=\\"nofollow\\">pydantic.dev</a><br /><br/>How Did REST Come To Mean The Opposite of REST Article: <a href=\\"https://htmx.org/essays/how-did-rest-come-to-mean-the-opposite-of-rest/\\" rel=\\"nofollow\\">htmx.org</a><br /><br/>Tailwind UI: <a href=\\"https://tailwindui.com/components/application-ui/lists/grid-lists\\" rel=\\"nofollow\\">tailwindui.com</a><br /><br/>Dropbase: <a href=\\"https://www.dropbase.io\\" rel=\\"nofollow\\">dropbase.io</a><br /><br/>Anvil: <a href=\\"https://anvil.works\\" rel=\\"nofollow\\">anvil.works</a><br /><br/>Flutter code example: <a href=\\"https://github.com/ajay-prabhakar/awesome-flutter-ui/blob/master/book_app_ui/lib/main.dart\\" rel=\\"nofollow\\">github.com</a><br /><br/>ReactJS code example: <a href=\\"https://github.com/Yog9/SnapShot/blob/master/src/App.js\\" rel=\\"nofollow\\">github.com</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;DzyxUVm_1cI\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/449/building-uis-in-python-with-fastui\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "4hIwNjzPAeSilYlbMaXkF9",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#449: Building UIs in Python with FastUI",\n      "release_date" : "2024-02-13",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:4hIwNjzPAeSilYlbMaXkF9"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/4BXSmGivWKsOf6OebPf78C/clip_2287750_2339840.mp3",\n      "description" : "So you\'ve created a Python-based open source project and it\'s started to take off. You\'re getting contributors, lots of buzz in the podcast space, and more. But you have that day job working on Java. How do you make the transition from popular hobby project to full time job? After all, you are giving away your open source project for free, right? Well, on this episode, I have put together an amazing panel of guests who all have done exactly this: Turned their project into full time work and even companies in some cases. We have Samuel Colvin, Gina H\xc3\xa4u\xc3\x9fge, Sebasti\xc3\xa1n Ram\xc3\xadrez, Charlie Marsh, Will McGugan and Eric Holscher on to share their stories.  Episode sponsors  Basedash Sentry Error Monitoring, Code TALKPYTHON Talk Python Courses  Links from the show  Will McGugan: @willmcgugan Charlie Marsh: @charliermarsh@hachyderm Sebasti\xc3\xa1n Ram\xc3\xadrez: @tiangolo Samuel Colvin: @samuel_colvin Gina on Mastodon: chaos.social/@foosel Eric Holscher: @ericholscher  Pydantic: pydantic.dev Astral (makes of Ruff): astral.sh Octoprint: octoprint.org Read the Docs: readthedocs.com FastAPI: fastapi.tiangolo.com Textual (makes of Rich): textualize.io Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3526125,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/0W06rflPTZgFRFXIZI2ENf"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/0W06rflPTZgFRFXIZI2ENf",\n      "html_description" : "So you&#39;ve created a Python-based open source project and it&#39;s started to take off. You&#39;re getting contributors, lots of buzz in the podcast space, and more. But you have that day job working on Java. How do you make the transition from popular hobby project to full time job? After all, you are giving away your open source project for free, right? Well, on this episode, I have put together an amazing panel of guests who all have done exactly this: Turned their project into full time work and even companies in some cases. We have Samuel Colvin, Gina H\xc3\xa4u\xc3\x9fge, Sebasti\xc3\xa1n Ram\xc3\xadrez, Charlie Marsh, Will McGugan and Eric Holscher on to share their stories.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/basedash\\" rel=\\"nofollow\\">Basedash</a><br /><br/><a href=\\"https://talkpython.fm/sentry-monorepo\\" rel=\\"nofollow\\">Sentry Error Monitoring, Code TALKPYTHON</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Will McGugan: <a href=\\"https://twitter.com/willmcgugan\\" rel=\\"nofollow\\">&#64;willmcgugan</a><br /><br/>Charlie Marsh: <a href=\\"https://hachyderm.io/&#64;charliermarsh\\" rel=\\"nofollow\\">&#64;charliermarsh&#64;hachyderm</a><br /><br/>Sebasti\xc3\xa1n Ram\xc3\xadrez: <a href=\\"https://twitter.com/tiangolo\\" rel=\\"nofollow\\">&#64;tiangolo</a><br /><br/>Samuel Colvin: <a href=\\"https://twitter.com/samuel_colvin\\" rel=\\"nofollow\\">&#64;samuel_colvin</a><br /><br/>Gina on Mastodon: <a href=\\"https://chaos.social/&#64;foosel\\" rel=\\"nofollow\\">chaos.social/&#64;foosel</a><br /><br/>Eric Holscher: <a href=\\"https://twitter.com/ericholscher\\" rel=\\"nofollow\\">&#64;ericholscher</a><br /><br/><br /><br/>Pydantic: <a href=\\"https://pydantic.dev\\" rel=\\"nofollow\\">pydantic.dev</a><br /><br/>Astral (makes of Ruff): <a href=\\"https://astral.sh\\" rel=\\"nofollow\\">astral.sh</a><br /><br/>Octoprint: <a href=\\"https://octoprint.org\\" rel=\\"nofollow\\">octoprint.org</a><br /><br/>Read the Docs: <a href=\\"https://about.readthedocs.com/\\" rel=\\"nofollow\\">readthedocs.com</a><br /><br/>FastAPI: <a href=\\"https://fastapi.tiangolo.com\\" rel=\\"nofollow\\">fastapi.tiangolo.com</a><br /><br/>Textual (makes of Rich): <a href=\\"https://www.textualize.io\\" rel=\\"nofollow\\">textualize.io</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;HV1LKitAr44\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/448/full-time-open-source-devs-panel\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "0W06rflPTZgFRFXIZI2ENf",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#448: Full-Time Open Source Devs Panel",\n      "release_date" : "2024-02-08",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:0W06rflPTZgFRFXIZI2ENf"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/4EZOZ3U9rZcG8AMg9A2Xhn/clip_2100800_2147050.mp3",\n      "description" : "It\'s an exciting time for the capabilities of Python. We have the Faster CPython initiative going strong, the recent async work, the adoption of typing and on this episode we discuss a new isolation and parallelization capability coming to Python through sub-interpreters. We have Eric Snow who spearheaded the work to get them added to Python 3.12 and is working on the Python API for 3.13 along with Anthony Shaw who has been pushing the boundaries of what you can already do with subinterpreters.  Episode sponsors  Pybites PDM Sentry Error Monitoring, Code TALKPYTHON Talk Python Courses  Links from the show  Guests Anthony Shaw: @tonybaloney@fosstodon.org Eric Snow: @ericsnowcurrently@mastodon.social  PEP 684 \xe2\x80\x93 A Per-Interpreter GIL: peps.python.org PEP 734 \xe2\x80\x93 Multiple Interpreters in the Stdlib: peps.python.org Running Python Parallel Applications with Sub Interpreters: fosstodon.org pytest subinterpreters: fosstodon.org Long-Term Vision for a Parallel Python Programming Model?: fosstodon.org   Hypercorn Server: github.com msgspec: jcristharif.com Dill package: pypi.org Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 4268885,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/6CosZ9RxMg7uxG61s8YDVf"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/6CosZ9RxMg7uxG61s8YDVf",\n      "html_description" : "It&#39;s an exciting time for the capabilities of Python. We have the Faster CPython initiative going strong, the recent async work, the adoption of typing and on this episode we discuss a new isolation and parallelization capability coming to Python through sub-interpreters. We have Eric Snow who spearheaded the work to get them added to Python 3.12 and is working on the Python API for 3.13 along with Anthony Shaw who has been pushing the boundaries of what you can already do with subinterpreters.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/pdm2024-v3\\" rel=\\"nofollow\\">Pybites PDM</a><br /><br/><a href=\\"https://talkpython.fm/sentry-monorepo\\" rel=\\"nofollow\\">Sentry Error Monitoring, Code TALKPYTHON</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Guests<br /><br/>Anthony Shaw: <a href=\\"https://fosstodon.org/&#64;tonybaloney\\" rel=\\"nofollow\\">&#64;tonybaloney&#64;fosstodon.org</a><br /><br/>Eric Snow: <a href=\\"https://mastodon.social/&#64;ericsnowcurrently\\" rel=\\"nofollow\\">&#64;ericsnowcurrently&#64;mastodon.social</a><br /><br/><br /><br/>PEP 684 \xe2\x80\x93 A Per-Interpreter GIL: <a href=\\"https://peps.python.org/pep-684/\\" rel=\\"nofollow\\">peps.python.org</a><br /><br/>PEP 734 \xe2\x80\x93 Multiple Interpreters in the Stdlib: <a href=\\"https://peps.python.org/pep-0734/\\" rel=\\"nofollow\\">peps.python.org</a><br /><br/>Running Python Parallel Applications with Sub Interpreters: <a href=\\"https://fosstodon.org/&#64;tonybaloney/111427911923421383\\" rel=\\"nofollow\\">fosstodon.org</a><br /><br/>pytest subinterpreters: <a href=\\"https://fosstodon.org/&#64;tonybaloney/111469609963107109\\" rel=\\"nofollow\\">fosstodon.org</a><br /><br/>Long-Term Vision for a Parallel Python Programming Model?: <a href=\\"https://fosstodon.org/&#64;tonybaloney/111462833872583023\\" rel=\\"nofollow\\">fosstodon.org</a><br /><br/><br /><br/><br /><br/>Hypercorn Server: <a href=\\"https://github.com/pgjones/hypercorn/\\" rel=\\"nofollow\\">github.com</a><br /><br/>msgspec: <a href=\\"https://jcristharif.com/msgspec/benchmarks.html\\" rel=\\"nofollow\\">jcristharif.com</a><br /><br/>Dill package: <a href=\\"https://pypi.org/project/dill/\\" rel=\\"nofollow\\">pypi.org</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;gW1sBMfRPjg\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/447/parallel-python-apps-with-sub-interpreters\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "6CosZ9RxMg7uxG61s8YDVf",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#447: Parallel Python Apps with Sub Interpreters",\n      "release_date" : "2024-02-03",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:6CosZ9RxMg7uxG61s8YDVf"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/3Vu3ZCOmVQXXzA3etWgoqD/clip_392272_448397.mp3",\n      "description" : "Why is Python so popular? There is plenty of room for debate on this but one solid reason is it\'s easy to adopt, easy to use, and caters to people who are not quite developers/data scientists but need to do some computing. Do you know where there largest untapped set of that group hang out? Excel. That\'s why it\'s super exciting that Python is now going to be built directly into Excel. Just go into a cell and type =PY and you\'re off writing full Python 3 code that is backed by a lite Anaconda distribution of Python. And we have Dr. Sarah Kaiser here to give us the rundown on Python in Excel.  Episode sponsors  Posit Pybites PDM Talk Python Courses  Links from the show  Sarah\'s website: sckaiser.com Sarah on Mastodon: @crazy4pi314@mathstodon.xyz  Get started with Python in Excel: microsoft.com Python in SQL Server: microsoft.com 8 of the Biggest Excel Mistakes of All Time: blog.hurree.co Security and Python in Excel: microsoft.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 2889065,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/3T1iTFyuAa4cDwBk8wnvNf"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/3T1iTFyuAa4cDwBk8wnvNf",\n      "html_description" : "Why is Python so popular? There is plenty of room for debate on this but one solid reason is it&#39;s easy to adopt, easy to use, and caters to people who are not quite developers/data scientists but need to do some computing. Do you know where there largest untapped set of that group hang out? Excel. That&#39;s why it&#39;s super exciting that Python is now going to be built directly into Excel. Just go into a cell and type &#61;PY and you&#39;re off writing full Python 3 code that is backed by a lite Anaconda distribution of Python. And we have Dr. Sarah Kaiser here to give us the rundown on Python in Excel.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/posit\\" rel=\\"nofollow\\">Posit</a><br /><br/><a href=\\"https://talkpython.fm/pdm2024-v2\\" rel=\\"nofollow\\">Pybites PDM</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Sarah&#39;s website: <a href=\\"https://www.sckaiser.com\\" rel=\\"nofollow\\">sckaiser.com</a><br /><br/>Sarah on Mastodon: <a href=\\"https://mathstodon.xyz/&#64;crazy4pi314\\" rel=\\"nofollow\\">&#64;crazy4pi314&#64;mathstodon.xyz</a><br /><br/><br /><br/>Get started with Python in Excel: <a href=\\"https://support.microsoft.com/en-us/office/get-started-with-python-in-excel-a33fbcbe-065b-41d3-82cf-23d05397f53d\\" rel=\\"nofollow\\">microsoft.com</a><br /><br/>Python in SQL Server: <a href=\\"https://cloudblogs.microsoft.com/sqlserver/2017/04/19/python-in-sql-server-2017-enhanced-in-database-machine-learning/\\" rel=\\"nofollow\\">microsoft.com</a><br /><br/>8 of the Biggest Excel Mistakes of All Time: <a href=\\"https://blog.hurree.co/8-of-the-biggest-excel-mistakes-of-all-time\\" rel=\\"nofollow\\">blog.hurree.co</a><br /><br/>Security and Python in Excel: <a href=\\"https://support.microsoft.com/en-us/office/data-security-and-python-in-excel-33cc88a4-4a87-485e-9ff9-f35958278327\\" rel=\\"nofollow\\">microsoft.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/446/python-in-excel\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "3T1iTFyuAa4cDwBk8wnvNf",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#446: Python in Excel",\n      "release_date" : "2024-01-26",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:3T1iTFyuAa4cDwBk8wnvNf"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/2AzZg34CgvQ6wSzRLBr65d/clip_718600_784850.mp3",\n      "description" : "When you run your code in the cloud, how much do you know about where it runs? I mean, the hardware it runs on and the data center it runs in? There are just a couple of hyper-scale cloud providers in the world. This episode is a very unique chance to get a deep look inside one of them: Microsoft Azure. Azure is comprised of over 200 physical data centers, each with 100,000s of servers. A look into how code runs on them is fascinating. Our guide for this journey will be Mark Russinovich. Mark is the CTO of Microsoft Azure and a Technical Fellow, Microsoft\'s senior-most technical position. He\'s also a bit of a programming hero of mine. Even if you don\'t host your code in the cloud, I think you\'ll enjoy this conversation. Let\'s dive in.  Episode sponsors  Posit Pybites PDM Talk Python Courses  Links from the show  Mark Russinovich: @markrussinovich Mark Russinovich on LinkedIn: linkedin.com  SysInternals: learn.microsoft.com Zero Day: A Jeff Aiken Novel: amazon.com Inside Azure Datacenters: youtube.com What runs chatgpt?: youtube.com Azure Cobalt ARM chip: servethehome.com Closing talk by Mark at Ignite 2023: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 2544578,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/3P4h8XyPd0XE71LNHKtDSm"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/3P4h8XyPd0XE71LNHKtDSm",\n      "html_description" : "When you run your code in the cloud, how much do you know about where it runs? I mean, the hardware it runs on and the data center it runs in? There are just a couple of hyper-scale cloud providers in the world. This episode is a very unique chance to get a deep look inside one of them: Microsoft Azure. Azure is comprised of over 200 physical data centers, each with 100,000s of servers. A look into how code runs on them is fascinating. Our guide for this journey will be Mark Russinovich. Mark is the CTO of Microsoft Azure and a Technical Fellow, Microsoft&#39;s senior-most technical position. He&#39;s also a bit of a programming hero of mine. Even if you don&#39;t host your code in the cloud, I think you&#39;ll enjoy this conversation. Let&#39;s dive in.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/posit\\" rel=\\"nofollow\\">Posit</a><br /><br/><a href=\\"https://talkpython.fm/pdm2024-v1\\" rel=\\"nofollow\\">Pybites PDM</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Mark Russinovich: <a href=\\"https://twitter.com/markrussinovich?lang&#61;en\\" rel=\\"nofollow\\">&#64;markrussinovich</a><br /><br/>Mark Russinovich on LinkedIn: <a href=\\"https://www.linkedin.com/in/markrussinovich/\\" rel=\\"nofollow\\">linkedin.com</a><br /><br/><br /><br/>SysInternals: <a href=\\"https://learn.microsoft.com/en-us/sysinternals/\\" rel=\\"nofollow\\">learn.microsoft.com</a><br /><br/>Zero Day: A Jeff Aiken Novel: <a href=\\"https://www.amazon.com/Zero-Day-Jeff-Aiken-Novel/dp/1250007305/ref&#61;pd_bxgy_img_d_sccl_1/137-8705053-7401005?pd_rd_w&#61;ZlR5u&amp;content-id&#61;amzn1.sym.7746dde5-5539-43d2-b75f-28935d70f100&amp;pf_rd_p&#61;7746dde5-5539-43d2-b75f-28935d70f100&amp;pf_rd_r&#61;TX24D8NYH7N6PB3TWS0Y&amp;pd_rd_wg&#61;Uqqcc&amp;pd_rd_r&#61;df72b7fc-1541-4ff8-bf7f-0780800b5610&amp;pd_rd_i&#61;1250007305&amp;psc&#61;1\\" rel=\\"nofollow\\">amazon.com</a><br /><br/>Inside Azure Datacenters: <a href=\\"https://www.youtube.com/watch?v&#61;sgIBC3yWa-M\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>What runs chatgpt?: <a href=\\"https://www.youtube.com/watch?v&#61;Rk3nTUfRZmo\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Azure Cobalt ARM chip: <a href=\\"https://www.servethehome.com/microsoft-azure-cobalt-100-128-core-arm-neoverse-n2-cpu-launched/\\" rel=\\"nofollow\\">servethehome.com</a><br /><br/>Closing talk by Mark at Ignite 2023: <a href=\\"https://youtu.be/c4SUhWBybXo?si&#61;_tFb9XCn7xh7hs2O&amp;t&#61;124\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/445/inside-azure-data-centers-with-mark-russinovich\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "3P4h8XyPd0XE71LNHKtDSm",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#445: Inside Azure Data Centers with Mark Russinovich",\n      "release_date" : "2024-01-19",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:3P4h8XyPd0XE71LNHKtDSm"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/6nHMFT8XyBpo7w4TYMsuWo/clip_2498900_2546800.mp3",\n      "description" : "Are you early in your software dev or data science career? Maybe it hasn\'t even really started yet and you\'re still in school. On this episode we have Sydney Runkle who has had a ton of success in the Python space and she hasn\'t even graduated yet. We sit down to talk about what she\'s done and might do differently again to achieve that success. It\'s \\"The Young Coder\'s Blueprint to Success\\" on episode 444 of Talk Python To Me.  Episode sponsors  Talk Python Courses  Links from the show  Sydney Runkle: linkedin.com Pydantic: pydantic.dev Code Combat: codecombat.com Humanitarian Toolbox: www.htbox.org PyCon 2024: pycon.org Good first issue example: github.com Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3306866,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/2Q31uaZmezQZIqKjOdExMs"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/2Q31uaZmezQZIqKjOdExMs",\n      "html_description" : "Are you early in your software dev or data science career? Maybe it hasn&#39;t even really started yet and you&#39;re still in school. On this episode we have Sydney Runkle who has had a ton of success in the Python space and she hasn&#39;t even graduated yet. We sit down to talk about what she&#39;s done and might do differently again to achieve that success. It&#39;s &#34;The Young Coder&#39;s Blueprint to Success&#34; on episode 444 of Talk Python To Me.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Sydney Runkle: <a href=\\"https://www.linkedin.com/in/sydney-runkle-105a35190/\\" rel=\\"nofollow\\">linkedin.com</a><br /><br/>Pydantic: <a href=\\"https://pydantic.dev\\" rel=\\"nofollow\\">pydantic.dev</a><br /><br/>Code Combat: <a href=\\"https://codecombat.com/play\\" rel=\\"nofollow\\">codecombat.com</a><br /><br/>Humanitarian Toolbox: www.htbox.org<br /><br/>PyCon 2024: <a href=\\"https://us.pycon.org/2024/\\" rel=\\"nofollow\\">pycon.org</a><br /><br/>Good first issue example: <a href=\\"https://github.com/pydantic/pydantic/labels/good%20first%20issue\\" rel=\\"nofollow\\">github.com</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;LtEYowIazVQ\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/444/the-young-coders-blueprint-to-success\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "2Q31uaZmezQZIqKjOdExMs",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#444: The Young Coder\'s Blueprint to Success",\n      "release_date" : "2024-01-02",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:2Q31uaZmezQZIqKjOdExMs"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/4IM7hXivJCVJe4Hx70HnCV/clip_633400_680750.mp3",\n      "description" : "Special crossover episode of Python Bytes to wrap up 2023. Topics include:        Michael #1: Hatch v1.8    Brian #2: svcs : A Flexible Service Locator for Python    Michael #3: Steering Council 2024 Term  Election Results    Brian #4: Python protocols. When        to use them in your projects to abstract and decoupling    ExtrasJoke: Joke: The dream is dead?  Episode sponsors  Posit Talk Python Courses",\n      "duration_ms" : 2114905,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/10OEwiBlVplcYIVqM2F3iF"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/10OEwiBlVplcYIVqM2F3iF",\n      "html_description" : "Special crossover episode of Python Bytes to wrap up 2023. Topics include:<br/><br /><br/><br /><br/><ol><li><ul><li>Michael #1: <a href=\\"https://hatch.pypa.io/latest/blog/2023/12/11/hatch-v180/\\" rel=\\"nofollow\\">Hatch v1.8</a></li></ul>    <ul><li>Brian #2: <a href=\\"https://svcs.hynek.me/en/stable/\\" rel=\\"nofollow\\">svcs : A Flexible Service Locator for Python</a></li></ul>    <ul><li>Michael #3: <a href=\\"https://discuss.python.org/t/steering-council-election-results-2024-term/40851\\" rel=\\"nofollow\\">Steering Council 2024 Term  Election Results</a></li></ul>    <ul><li>Brian #4: <a href=\\"https://typethepipe.com/post/python-protocols-when-to-use\\" rel=\\"nofollow\\">Python protocols. When        to use them in your projects to abstract and decoupling</a></li></ul>    <ul><li>Extras</li></ul><ul><li>Joke: Joke: <a href=\\"https://mastodon.social/&#64;tveskov/111289358585305218\\" rel=\\"nofollow\\">The dream is dead?</a></li></ul></li></ol><br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/posit\\" rel=\\"nofollow\\">Posit</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a>",\n      "id" : "10OEwiBlVplcYIVqM2F3iF",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#443: Python Bytes Crossover 2023",\n      "release_date" : "2023-12-29",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:10OEwiBlVplcYIVqM2F3iF"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/1Q7fPJRbwDlnd1aRlVALMT/clip_1427550_1479450.mp3",\n      "description" : "If you\'re a fan of Pydantic or dataclasses, you\'ll definitely be interested in this episode. We are talking about a super fast data modeling and validation framework called msgspec. Some of the types in here might even be better for general purpose use than Python\'s native classes. Join me and Jim Crist-Harif to talk about his data exchange framework, mspspec.  Episode sponsors  Posit Talk Python Courses  Links from the show  Jim Crist-Harif: jcristharif.com Jim @ GitHub: github.com Jim @ Mastdon: @jcristharif@hachyderm.io  msgspec: github.com Projects using msgspec: github.com msgspec on Conda Forge: anaconda.org msgspec on PyPI: pypi.org Litestar web framework: litestar.dev Litestar episode: talkpython.fm Pydantic V2 episode: talkpython.fm JSON parsing with msgspec article: pythonspeed.com  msgspec bencharmks: jcristharif.com msgspec vs. pydantic v1 and pydantic v2: github.com Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3609547,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/5sUqVA8LdjEGwwfb7w5BG9"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/5sUqVA8LdjEGwwfb7w5BG9",\n      "html_description" : "If you&#39;re a fan of Pydantic or dataclasses, you&#39;ll definitely be interested in this episode. We are talking about a super fast data modeling and validation framework called msgspec. Some of the types in here might even be better for general purpose use than Python&#39;s native classes. Join me and Jim Crist-Harif to talk about his data exchange framework, mspspec.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/posit\\" rel=\\"nofollow\\">Posit</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Jim Crist-Harif: <a href=\\"https://jcristharif.com\\" rel=\\"nofollow\\">jcristharif.com</a><br /><br/>Jim &#64; GitHub: <a href=\\"https://github.com/jcrist\\" rel=\\"nofollow\\">github.com</a><br /><br/>Jim &#64; Mastdon: <a href=\\"https://hachyderm.io/&#64;jcristharif\\" rel=\\"nofollow\\">&#64;jcristharif&#64;hachyderm.io</a><br /><br/><br /><br/>msgspec: <a href=\\"https://github.com/jcrist/msgspec\\" rel=\\"nofollow\\">github.com</a><br /><br/>Projects using msgspec: <a href=\\"https://github.com/jcrist/msgspec/network/dependents?dependent_type&#61;REPOSITORY\\" rel=\\"nofollow\\">github.com</a><br /><br/>msgspec on Conda Forge: <a href=\\"https://anaconda.org/conda-forge/msgspec\\" rel=\\"nofollow\\">anaconda.org</a><br /><br/>msgspec on PyPI: <a href=\\"https://pypi.org/project/msgspec/\\" rel=\\"nofollow\\">pypi.org</a><br /><br/>Litestar web framework: <a href=\\"https://litestar.dev\\" rel=\\"nofollow\\">litestar.dev</a><br /><br/>Litestar episode: <a href=\\"https://talkpython.fm/episodes/show/433/litestar-effortlessly-build-performant-apis\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/>Pydantic V2 episode: <a href=\\"https://talkpython.fm/episodes/show/376/pydantic-v2-the-plan\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/>JSON parsing with msgspec article: <a href=\\"https://pythonspeed.com/articles/faster-python-json-parsing/\\" rel=\\"nofollow\\">pythonspeed.com</a><br /><br/><br /><br/>msgspec bencharmks: <a href=\\"https://jcristharif.com/msgspec/benchmarks.html\\" rel=\\"nofollow\\">jcristharif.com</a><br /><br/>msgspec vs. pydantic v1 and pydantic v2: <a href=\\"https://gist.github.com/jcrist/d62f450594164d284fbea957fd48b743\\" rel=\\"nofollow\\">github.com</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;9Qq2q-9HHqs\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/442/ultra-high-speed-message-parsing-with-msgspec\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "5sUqVA8LdjEGwwfb7w5BG9",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#442: Ultra High Speed Message Parsing with msgspec",\n      "release_date" : "2023-12-14",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:5sUqVA8LdjEGwwfb7w5BG9"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/0p4jfcuHzIH9vALCYMCHED/clip_361350_420650.mp3",\n      "description" : "You\'ve probably heard the term \\"syntactic sugar\\", that is, syntax within a programming language that is designed to make things easier to read or to express. It makes the language \\"sweeter\\" for human use. It turns out Brett Cannon has spent 2 years diving into and writing about Python\'s sweet language features and how they really work down inside CPython. He joins me on the show today to dive into a few of the more relevant posts he\'s written about it.  Episode sponsors  Talk Python Courses  Links from the show  Brett Cannon: @brettcannon@fosstodon.org  Syntactic sugar series: snarky.ca Syntactic sugar: wikipedia.org Unravelling attribute access in Python: snarky.ca Unravelling binary arithmetic operations: snarky.ca Unravelling the import statement: snarky.ca record-type: pypi.org Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 4043128,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/0yk3LrOgD3URRzmDXJ3LxE"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/0yk3LrOgD3URRzmDXJ3LxE",\n      "html_description" : "You&#39;ve probably heard the term &#34;syntactic sugar&#34;, that is, syntax within a programming language that is designed to make things easier to read or to express. It makes the language &#34;sweeter&#34; for human use. It turns out Brett Cannon has spent 2 years diving into and writing about Python&#39;s sweet language features and how they really work down inside CPython. He joins me on the show today to dive into a few of the more relevant posts he&#39;s written about it.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Brett Cannon: <a href=\\"https://fosstodon.org/&#64;brettcannon\\" rel=\\"nofollow\\">&#64;brettcannon&#64;fosstodon.org</a><br /><br/><br /><br/>Syntactic sugar series: <a href=\\"https://snarky.ca/tag/syntactic-sugar/\\" rel=\\"nofollow\\">snarky.ca</a><br /><br/>Syntactic sugar: <a href=\\"https://en.wikipedia.org/wiki/Syntactic_sugar\\" rel=\\"nofollow\\">wikipedia.org</a><br /><br/>Unravelling attribute access in Python: <a href=\\"https://snarky.ca/unravelling-attribute-access-in-python/\\" rel=\\"nofollow\\">snarky.ca</a><br /><br/>Unravelling binary arithmetic operations: <a href=\\"https://snarky.ca/unravelling-binary-arithmetic-operations-in-python/\\" rel=\\"nofollow\\">snarky.ca</a><br /><br/>Unravelling the import statement: <a href=\\"https://snarky.ca/unravelling-the-import-statement/\\" rel=\\"nofollow\\">snarky.ca</a><br /><br/>record-type: <a href=\\"https://pypi.org/project/record-type/\\" rel=\\"nofollow\\">pypi.org</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;5Ff2x4_3lTI\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/441/python-syntactic-sugar\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "0yk3LrOgD3URRzmDXJ3LxE",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#441: Python = Syntactic Sugar?",\n      "release_date" : "2023-12-06",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:0yk3LrOgD3URRzmDXJ3LxE"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/3RV5t4WefxtETE2uR8ZkPJ/clip_3040970_3091172.mp3",\n      "description" : "We all know that LLMs and generative AI has been working its way into many products. It\'s Jupyter\'s turn to get a really awesome integration. We have David Qiu here to tell us about Jupyter AI. Jupyter AI provides a user-friendly and powerful way to apply generative AI to your notebooks. It lets you choose from many different LLM providers and models to get just the help you\'re looking for. And it does way more than just a chat pane in the UI. Listen to find out.  Episode sponsors  Posit Talk Python Courses  Links from the show  David Qiu: linkedin.com  Jupyter AI: jupyter-ai.readthedocs.io  Asking about something in your notebook: jupyter-ai.readthedocs.io Generating a new notebook: jupyter-ai.readthedocs.io Learning about local data: jupyter-ai.readthedocs.io Formatting the output: jupyter-ai.readthedocs.io Interpolating in prompts: jupyter-ai.readthedocs.io JupyterCon 2023 Talk: youtube.com PyData Seattle 2023 Talk: youtube.com Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3540009,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/3mmHKFFV93QKHTClzzSkck"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/3mmHKFFV93QKHTClzzSkck",\n      "html_description" : "We all know that LLMs and generative AI has been working its way into many products. It&#39;s Jupyter&#39;s turn to get a really awesome integration. We have David Qiu here to tell us about Jupyter AI. Jupyter AI provides a user-friendly and powerful way to apply generative AI to your notebooks. It lets you choose from many different LLM providers and models to get just the help you&#39;re looking for. And it does way more than just a chat pane in the UI. Listen to find out.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/posit\\" rel=\\"nofollow\\">Posit</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>David Qiu: <a href=\\"https://www.linkedin.com/in/dlq/\\" rel=\\"nofollow\\">linkedin.com</a><br /><br/><br /><br/>Jupyter AI: <a href=\\"https://jupyter-ai.readthedocs.io/en/latest/\\" rel=\\"nofollow\\">jupyter-ai.readthedocs.io</a><br /><br/><br /><br/>Asking about something in your notebook: <a href=\\"https://jupyter-ai.readthedocs.io/en/latest/users/index.html#asking-about-something-in-your-notebook\\" rel=\\"nofollow\\">jupyter-ai.readthedocs.io</a><br /><br/>Generating a new notebook: <a href=\\"https://jupyter-ai.readthedocs.io/en/latest/users/index.html#generating-a-new-notebook\\" rel=\\"nofollow\\">jupyter-ai.readthedocs.io</a><br /><br/>Learning about local data: <a href=\\"https://jupyter-ai.readthedocs.io/en/latest/users/index.html#learning-about-local-data\\" rel=\\"nofollow\\">jupyter-ai.readthedocs.io</a><br /><br/>Formatting the output: <a href=\\"https://jupyter-ai.readthedocs.io/en/latest/users/index.html#formatting-the-output\\" rel=\\"nofollow\\">jupyter-ai.readthedocs.io</a><br /><br/>Interpolating in prompts: <a href=\\"https://jupyter-ai.readthedocs.io/en/latest/users/index.html#interpolating-in-prompts\\" rel=\\"nofollow\\">jupyter-ai.readthedocs.io</a><br /><br/>JupyterCon 2023 Talk: <a href=\\"https://www.youtube.com/watch?v&#61;bbj_oDh81hY\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>PyData Seattle 2023 Talk: <a href=\\"https://www.youtube.com/watch?v&#61;T0rzH_KslKQ\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;7Sxw6gh6Gr8\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/440/talking-to-notebooks-with-jupyter-ai\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "3mmHKFFV93QKHTClzzSkck",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#440: Talking to Notebooks with Jupyter AI",\n      "release_date" : "2023-11-30",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:3mmHKFFV93QKHTClzzSkck"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/5woTAbjhw2xCBaj19Z3rQ0/clip_1699450_1750300.mp3",\n      "description" : "On this episode we have Wolf Vollprecht and Ruben Arts from the pixi project here to talk about pixi, a high performance package manager for Python and other languages that actually manages Python itself too. They have a lot of interesting ideas on where Python packaging should go and are putting their time and effort behind them. Will pixi become your next package manager? Listen in to find out.  Episode sponsors  Posit Python Tutor Talk Python Courses  Links from the show  Guests Wolf Vollprecht: github.com/wolfv Ruben Arts: github.com/ruben-arts  pixi: prefix.dev Prefix: prefix.dev Launching pixi: prefix.dev Conda: docs.conda.io Conda Forge: conda-forge.org NixOS: nixos.org Packaging Con 2023: packaging-con.org Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3552026,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/07YK9vwSHNqRhHJ1FpcLYb"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/07YK9vwSHNqRhHJ1FpcLYb",\n      "html_description" : "On this episode we have Wolf Vollprecht and Ruben Arts from the pixi project here to talk about pixi, a high performance package manager for Python and other languages that actually manages Python itself too. They have a lot of interesting ideas on where Python packaging should go and are putting their time and effort behind them. Will pixi become your next package manager? Listen in to find out.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/posit\\" rel=\\"nofollow\\">Posit</a><br /><br/><a href=\\"https://talkpython.fm/python-tutor\\" rel=\\"nofollow\\">Python Tutor</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Guests<br /><br/>Wolf Vollprecht: <a href=\\"https://github.com/wolfv\\" rel=\\"nofollow\\">github.com/wolfv</a><br /><br/>Ruben Arts: <a href=\\"https://github.com/ruben-arts\\" rel=\\"nofollow\\">github.com/ruben-arts</a><br /><br/><br /><br/>pixi: <a href=\\"https://prefix.dev/docs/pixi/overview\\" rel=\\"nofollow\\">prefix.dev</a><br /><br/>Prefix: <a href=\\"https://prefix.dev\\" rel=\\"nofollow\\">prefix.dev</a><br /><br/>Launching pixi: <a href=\\"https://prefix.dev/blog/launching_pixi\\" rel=\\"nofollow\\">prefix.dev</a><br /><br/>Conda: <a href=\\"https://docs.conda.io/en/latest/\\" rel=\\"nofollow\\">docs.conda.io</a><br /><br/>Conda Forge: <a href=\\"https://conda-forge.org\\" rel=\\"nofollow\\">conda-forge.org</a><br /><br/>NixOS: <a href=\\"https://nixos.org\\" rel=\\"nofollow\\">nixos.org</a><br /><br/>Packaging Con 2023: <a href=\\"https://packaging-con.org\\" rel=\\"nofollow\\">packaging-con.org</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;6gzugO-BZng\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/439/pixi-a-fast-package-manager\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "07YK9vwSHNqRhHJ1FpcLYb",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#439: Pixi, A Fast Package Manager",\n      "release_date" : "2023-11-22",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:07YK9vwSHNqRhHJ1FpcLYb"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/2yhopK7DHyX88R60h6kUR7/clip_773650_833400.mp3",\n      "description" : "Jupyter Notebooks and Jupyter Lab have to be one of the most important parts of Python when it comes to bring new users to the Python ecosystem and certainly for the day to day work of data scientists and general scientists who have made some of the biggest discoveries of recent times. And that platform has recently gotten a major upgrade with JupyterLab 4 released and Jupyter Notebook being significantly reworked to be based on the changes from JupyterLab as well. We have an excellent panel of guests, Sylvain Corlay, Frederic Collonval, Jeremy Tuloup, and Afshin Darian here to tell us what\'s new in these and other parts of the Jupyter ecosystem.  Episode sponsors  Phylum Python Tutor Talk Python Courses  Links from the show  Guests  Sylvain Corlay Frederic Collonval Jeremy Tuloup Afshin Darian  JupyterLab 4.0 is Here: blog.jupyter.org Announcing Jupyter Notebook 7: blog.jupyter.org JupyterCon 2023 Videos: youtube.com Jupyterlite: github.com Download JupyterLab Desktop: github.com Mythical Man Month Book: wikipedia.org Blender in Jupyter: twitter.com Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3895484,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/5iCLspEcJgGYWPAX0DBK0g"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/5iCLspEcJgGYWPAX0DBK0g",\n      "html_description" : "Jupyter Notebooks and Jupyter Lab have to be one of the most important parts of Python when it comes to bring new users to the Python ecosystem and certainly for the day to day work of data scientists and general scientists who have made some of the biggest discoveries of recent times. And that platform has recently gotten a major upgrade with JupyterLab 4 released and Jupyter Notebook being significantly reworked to be based on the changes from JupyterLab as well. We have an excellent panel of guests, Sylvain Corlay, Frederic Collonval, Jeremy Tuloup, and Afshin Darian here to tell us what&#39;s new in these and other parts of the Jupyter ecosystem.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/phylum-research\\" rel=\\"nofollow\\">Phylum</a><br /><br/><a href=\\"https://talkpython.fm/python-tutor\\" rel=\\"nofollow\\">Python Tutor</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Guests<br /><br/><br /><br/>Sylvain Corlay<br /><br/>Frederic Collonval<br /><br/>Jeremy Tuloup<br /><br/>Afshin Darian<br /><br/><br /><br/>JupyterLab 4.0 is Here: <a href=\\"https://blog.jupyter.org/jupyterlab-4-0-is-here-388d05e03442\\" rel=\\"nofollow\\">blog.jupyter.org</a><br /><br/>Announcing Jupyter Notebook 7: <a href=\\"https://blog.jupyter.org/announcing-jupyter-notebook-7-8d6d66126dcf\\" rel=\\"nofollow\\">blog.jupyter.org</a><br /><br/>JupyterCon 2023 Videos: <a href=\\"https://www.youtube.com/playlist?list&#61;PL_1BH3ug7n1Ih_Yy2TmM7MZ2zogSLZvzE\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Jupyterlite: <a href=\\"https://github.com/jupyterlite/jupyterlite\\" rel=\\"nofollow\\">github.com</a><br /><br/>Download JupyterLab Desktop: <a href=\\"https://github.com/jupyterlab/jupyterlab-desktop/releases\\" rel=\\"nofollow\\">github.com</a><br /><br/>Mythical Man Month Book: <a href=\\"https://en.wikipedia.org/wiki/The_Mythical_Man-Month\\" rel=\\"nofollow\\">wikipedia.org</a><br /><br/>Blender in Jupyter: <a href=\\"https://twitter.com/kolibril13/status/1699790198505353259\\" rel=\\"nofollow\\">twitter.com</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;OG41ji18kkU\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/438/celebrating-jupyterlab-4-and-jupyter-7-releases\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "5iCLspEcJgGYWPAX0DBK0g",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#438: Celebrating JupyterLab 4 and Jupyter 7 Releases",\n      "release_date" : "2023-11-16",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:5iCLspEcJgGYWPAX0DBK0g"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/2nKJWWrIDrIXdcFnX4mS2a/clip_1381048_1447368.mp3",\n      "description" : "Are you considering or struggling with replacing much of the interactivity of your Django app with frontend JavaScript frameworks? After all, your users do expect an interactive and modern app, right? Before you make a rash decision, you owe it to yourself to check out HTMX. It goes well with Django. We have Christopher Trudeau to run through a whole awesome list of HTMX and Python and tell us about his new HTMX + Django course.  Episode sponsors  IRL Podcast Sentry Error Monitoring, Code TALKPYTHON Talk Python Courses  Links from the show  Chris on ExTwitter: @cltrudeau Django in Action book: manning.com Django: djangoproject.com HTMX + Django course: talkpython.fm HTMX: htmx.org awesome-htmx: github.com awesome-python-htmx: github.com django-js-lib-htmx: github.com htmxflask: github.com fastapi-sse-htmx: github.com django-htmx-patterns: github.com jinja2-fragments: github.com jinja_partials: github.com chameleon_partials: github.com django-render-block: github.com flask-htmx: github.com htmx-flask: github.com asgi-htmx: github.com hx-requests: github.com django-dashboards: github.com A Real World React -> htmx Port: htmx.org 3 IRL use cases for Python and HTMX: bitecode.dev owela-club: github.com Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3889606,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/6vSZVU1LOBYj3txsEzPGDB"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/6vSZVU1LOBYj3txsEzPGDB",\n      "html_description" : "Are you considering or struggling with replacing much of the interactivity of your Django app with frontend JavaScript frameworks? After all, your users do expect an interactive and modern app, right? Before you make a rash decision, you owe it to yourself to check out HTMX. It goes well with Django. We have Christopher Trudeau to run through a whole awesome list of HTMX and Python and tell us about his new HTMX &#43; Django course.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/irl\\" rel=\\"nofollow\\">IRL Podcast</a><br /><br/><a href=\\"https://talkpython.fm/sentry-launch-week\\" rel=\\"nofollow\\">Sentry Error Monitoring, Code TALKPYTHON</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Chris on ExTwitter: <a href=\\"https://twitter.com/cltrudeau\\" rel=\\"nofollow\\">&#64;cltrudeau</a><br /><br/>Django in Action book: manning.com<br /><br/>Django: <a href=\\"https://www.djangoproject.com\\" rel=\\"nofollow\\">djangoproject.com</a><br /><br/>HTMX &#43; Django course: <a href=\\"https://training.talkpython.fm/courses/htmx-django-modern-python-web-apps-hold-the-javascript\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/>HTMX: <a href=\\"https://htmx.org\\" rel=\\"nofollow\\">htmx.org</a><br /><br/>awesome-htmx: <a href=\\"https://github.com/rajasegar/awesome-htmx\\" rel=\\"nofollow\\">github.com</a><br /><br/>awesome-python-htmx: <a href=\\"https://github.com/PyHAT-stack/awesome-python-htmx\\" rel=\\"nofollow\\">github.com</a><br /><br/>django-js-lib-htmx: <a href=\\"https://github.com/nonZero/django-js-lib-htmx\\" rel=\\"nofollow\\">github.com</a><br /><br/>htmxflask: <a href=\\"https://github.com/cscortes/htmxflask\\" rel=\\"nofollow\\">github.com</a><br /><br/>fastapi-sse-htmx: <a href=\\"https://github.com/vlcinsky/fastapi-sse-htmx\\" rel=\\"nofollow\\">github.com</a><br /><br/>django-htmx-patterns: <a href=\\"https://github.com/spookylukey/django-htmx-patterns\\" rel=\\"nofollow\\">github.com</a><br /><br/>jinja2-fragments: <a href=\\"https://github.com/sponsfreixes/jinja2-fragments\\" rel=\\"nofollow\\">github.com</a><br /><br/>jinja_partials: <a href=\\"https://github.com/mikeckennedy/jinja_partials\\" rel=\\"nofollow\\">github.com</a><br /><br/>chameleon_partials: <a href=\\"https://github.com/mikeckennedy/chameleon_partials\\" rel=\\"nofollow\\">github.com</a><br /><br/>django-render-block: <a href=\\"https://github.com/clokep/django-render-block\\" rel=\\"nofollow\\">github.com</a><br /><br/>flask-htmx: <a href=\\"https://github.com/edmondchuc/flask-htmx\\" rel=\\"nofollow\\">github.com</a><br /><br/>htmx-flask: <a href=\\"https://github.com/sponsfreixes/htmx-flask\\" rel=\\"nofollow\\">github.com</a><br /><br/>asgi-htmx: <a href=\\"https://github.com/florimondmanca/asgi-htmx\\" rel=\\"nofollow\\">github.com</a><br /><br/>hx-requests: <a href=\\"https://github.com/yaakovLowenstein/hx-requests\\" rel=\\"nofollow\\">github.com</a><br /><br/>django-dashboards: <a href=\\"https://github.com/wildfish/django-dashboards\\" rel=\\"nofollow\\">github.com</a><br /><br/>A Real World React -&gt; htmx Port: <a href=\\"https://htmx.org/essays/a-real-world-react-to-htmx-port/\\" rel=\\"nofollow\\">htmx.org</a><br /><br/>3 IRL use cases for Python and HTMX: <a href=\\"https://www.bitecode.dev/p/3-irl-use-cases-for-python-and-htmx\\" rel=\\"nofollow\\">bitecode.dev</a><br /><br/>owela-club: <a href=\\"https://github.com/adamchainz/owela-club\\" rel=\\"nofollow\\">github.com</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;esLvuP5Q0Sw\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/437/htmx-for-django-developers-and-all-of-us\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "6vSZVU1LOBYj3txsEzPGDB",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#437: HTMX for Django Developers (And All of Us)",\n      "release_date" : "2023-11-07",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:6vSZVU1LOBYj3txsEzPGDB"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/1jzDgdUmQvgRP04SLI0ISp/clip_3188000_3238500.mp3",\n      "description" : "How well do you know your Python packaging tools? These are things like pip which install your project\'s dependencies and their dependencies and so on. In this mix, we have more modern tools such as Poetry, Flit, Hatch and others. And even tools outside of Python itself which may attempt to manage Python itself in addition to the libraries. To make sense of all of this, we welcome back Anna-Lena Popkes for an unbiased evaluation of environment and packaging tools.  Episode sponsors  IRL Podcast Sentry Error Monitoring, Code TALKPYTHON Talk Python Courses  Links from the show  Anna-Lena\'s website: alpopkes.com Anna-Lena on GitHub: github.com Accompanying Blog Post: alpopkes.com Talk from PyCon DE: youtube.com Talk from EuroPython: youtube.com  Talk Python\'s Data Science Jumpstart with 10 Projects course: talkpython.fm  Rye: github.com Poetry: python-poetry.org Material for MkDocs: squidfunk.github.io 100 Days of Python in a Magical Universe Episode: talkpython.fm pip-tools: pip-tools.readthedocs.io Hatch: hatch.pypa.io PDM: pdm.fming.dev Flit: flit.pypa.io Conda: docs.conda.io Pipenv: pipenv.pypa.io Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3511719,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/4kLgMJhKbPhOcUh7Dh508q"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/4kLgMJhKbPhOcUh7Dh508q",\n      "html_description" : "How well do you know your Python packaging tools? These are things like pip which install your project&#39;s dependencies and their dependencies and so on. In this mix, we have more modern tools such as Poetry, Flit, Hatch and others. And even tools outside of Python itself which may attempt to manage Python itself in addition to the libraries. To make sense of all of this, we welcome back Anna-Lena Popkes for an unbiased evaluation of environment and packaging tools.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/irl\\" rel=\\"nofollow\\">IRL Podcast</a><br /><br/><a href=\\"https://talkpython.fm/sentry-launch-week\\" rel=\\"nofollow\\">Sentry Error Monitoring, Code TALKPYTHON</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Anna-Lena&#39;s website: <a href=\\"https://alpopkes.com/\\" rel=\\"nofollow\\">alpopkes.com</a><br /><br/>Anna-Lena on GitHub: <a href=\\"https://github.com/zotroneneis\\" rel=\\"nofollow\\">github.com</a><br /><br/>Accompanying Blog Post: <a href=\\"https://alpopkes.com/posts/python/packaging_tools/\\" rel=\\"nofollow\\">alpopkes.com</a><br /><br/>Talk from PyCon DE: <a href=\\"https://www.youtube.com/watch?v&#61;MsJjzVIVs6M\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Talk from EuroPython: <a href=\\"https://www.youtube.com/watch?v&#61;3-drZY3u5vo\\" rel=\\"nofollow\\">youtube.com</a><br /><br/><br /><br/>Talk Python&#39;s Data Science Jumpstart with 10 Projects course: <a href=\\"https://training.talkpython.fm/courses/data-science-jumpstart-with-10-projects\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>Rye: <a href=\\"https://github.com/mitsuhiko/rye\\" rel=\\"nofollow\\">github.com</a><br /><br/>Poetry: <a href=\\"https://python-poetry.org\\" rel=\\"nofollow\\">python-poetry.org</a><br /><br/>Material for MkDocs: <a href=\\"https://squidfunk.github.io/mkdocs-material/\\" rel=\\"nofollow\\">squidfunk.github.io</a><br /><br/>100 Days of Python in a Magical Universe Episode: <a href=\\"https://talkpython.fm/episodes/show/186/100-days-of-python-in-a-magical-universe\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/>pip-tools: <a href=\\"https://pip-tools.readthedocs.io/en/latest/\\" rel=\\"nofollow\\">pip-tools.readthedocs.io</a><br /><br/>Hatch: <a href=\\"https://hatch.pypa.io/latest/\\" rel=\\"nofollow\\">hatch.pypa.io</a><br /><br/>PDM: <a href=\\"https://pdm.fming.dev/latest/\\" rel=\\"nofollow\\">pdm.fming.dev</a><br /><br/>Flit: <a href=\\"https://flit.pypa.io/en/stable/\\" rel=\\"nofollow\\">flit.pypa.io</a><br /><br/>Conda: <a href=\\"https://docs.conda.io/en/latest/\\" rel=\\"nofollow\\">docs.conda.io</a><br /><br/>Pipenv: <a href=\\"https://pipenv.pypa.io/en/latest/\\" rel=\\"nofollow\\">pipenv.pypa.io</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;sxN-Iu-okdo\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/436/an-unbiased-evaluation-of-environment-and-packaging-tools\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "4kLgMJhKbPhOcUh7Dh508q",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#436: An Unbiased Evaluation of Environment and Packaging Tools",\n      "release_date" : "2023-11-01",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:4kLgMJhKbPhOcUh7Dh508q"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/4Tz2zHXDr6i2dypvxb2oWS/clip_187850_240050.mp3",\n      "description" : "Do you worry about your developer / data science supply chain safety? All the packages for the Python ecosystem are much of what makes Python awesome. But the are also a bit of an open door to your code and machine. Luckily the PSF is taking this seriously and hired Mike Fiedler as the full time PyPI Safety & Security Engineer (not to be confused with the Security Developer in Residence staffed by Seth Michael Larson). Mike is here to give us the state of the PyPI security and plans for the future.  Episode sponsors  Sentry Error Monitoring, Code TALKPYTHON Talk Python Courses  Links from the show  Mike on Twitter: @mikefiedler Mike on Mastodon: @miketheman@hachyderm.io  Supply Chain examples SolarWinds: csoonline.com XcodeGhost: wikipedia.org Google Ad Malware: medium.com  PyPI: pypi.org OWASP Top 10: owasp.org Trusted Publishers: docs.pypi.org libraries.io: libraries.io GitHub Full 2FA: github.blog Mike\'s Latest Blog Post: blog.pypi.org pprintpp package: github.com ICDiff: github.com Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3811657,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/4wr11gfgv5Fu1UcYTq4wvJ"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/4wr11gfgv5Fu1UcYTq4wvJ",\n      "html_description" : "Do you worry about your developer / data science supply chain safety? All the packages for the Python ecosystem are much of what makes Python awesome. But the are also a bit of an open door to your code and machine. Luckily the PSF is taking this seriously and hired Mike Fiedler as the full time PyPI Safety &amp; Security Engineer (not to be confused with the Security Developer in Residence staffed by Seth Michael Larson). Mike is here to give us the state of the PyPI security and plans for the future.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/sentry\\" rel=\\"nofollow\\">Sentry Error Monitoring, Code TALKPYTHON</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Mike on Twitter: <a href=\\"https://twitter.com/mikefiedler\\" rel=\\"nofollow\\">&#64;mikefiedler</a><br /><br/>Mike on Mastodon: <a href=\\"https://hachyderm.io/&#64;miketheman\\" rel=\\"nofollow\\">&#64;miketheman&#64;hachyderm.io</a><br /><br/><br /><br/>Supply Chain examples<br /><br/>SolarWinds: <a href=\\"https://www.csoonline.com/article/570191/solarwinds-supply-chain-attack-explained-why-organizations-were-not-prepared.html\\" rel=\\"nofollow\\">csoonline.com</a><br /><br/>XcodeGhost: <a href=\\"https://en.wikipedia.org/wiki/XcodeGhost\\" rel=\\"nofollow\\">wikipedia.org</a><br /><br/>Google Ad Malware: <a href=\\"https://medium.com/keysight-ati/the-emergence-of-google-ad-malware-understanding-the-threat-86ba74c13935\\" rel=\\"nofollow\\">medium.com</a><br /><br/><br /><br/>PyPI: <a href=\\"https://pypi.org\\" rel=\\"nofollow\\">pypi.org</a><br /><br/>OWASP Top 10: <a href=\\"https://owasp.org/Top10/\\" rel=\\"nofollow\\">owasp.org</a><br /><br/>Trusted Publishers: <a href=\\"https://docs.pypi.org/trusted-publishers/\\" rel=\\"nofollow\\">docs.pypi.org</a><br /><br/>libraries.io: <a href=\\"https://libraries.io\\" rel=\\"nofollow\\">libraries.io</a><br /><br/>GitHub Full 2FA: <a href=\\"https://github.blog/2023-03-09-raising-the-bar-for-software-security-github-2fa-begins-march-13/\\" rel=\\"nofollow\\">github.blog</a><br /><br/>Mike&#39;s Latest Blog Post: <a href=\\"https://blog.pypi.org/posts/2023-09-18-inbound-malware-reporting/\\" rel=\\"nofollow\\">blog.pypi.org</a><br /><br/>pprintpp package: <a href=\\"https://github.com/wolever/pprintpp\\" rel=\\"nofollow\\">github.com</a><br /><br/>ICDiff: <a href=\\"https://github.com/jeffkaufman/icdiff\\" rel=\\"nofollow\\">github.com</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;fcuZsyn00Q4\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/435/pypi-security\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "4wr11gfgv5Fu1UcYTq4wvJ",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#435: PyPI Security",\n      "release_date" : "2023-10-25",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:4wr11gfgv5Fu1UcYTq4wvJ"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/6sfVqiiABhBdCuMtH2JLMU/clip_1952000_2006800.mp3",\n      "description" : "Are you building a mobile app and wondering where Python fits in the mix? Are you support others building these apps with backend APIs written in Python? Can you write your entire app, end to end, in Python? I have a great panel put together to discuss exactly this. And they all have a different and unique take on the options. Welcome to Loren Aguey, Harout Boujakjian, Andr\xc3\xa9as K\xc3\xbchne, Jeyfrin and, Joshua.  Episode sponsors  Sentry Error Monitoring, Code TALKPYTHON Talk Python Courses  Links from the show  Guests Loren Aguey: linkedin.com Harout Boujakjian: linkedin.com Andr\xc3\xa9as K\xc3\xbchne: linkedin.com Jeyfrin, Joshua  Talk Python Mobile App: training.talkpython.fm/apps Epic Skies App: play.google.com PinPlanet App: pinplanetapp.com My Club App: apps.apple.com vid3d App: play.google.com  Flutter: flutter.dev Flutter Showcase: flutter.dev  pub.dev, Flutter\'s PyPI: pub.dev FastAPI: fastapi.tiangolo.com Litestar: litestar.dev Pyramid Web Framework: trypyramid.com Flask: flask.palletsprojects.com Django: djangoproject.com Django REST Framework: django-rest-framework.org Kivy: kivy.org  Swift: developer.apple.com Ionic Framework: ionicframework.com Ionic Source: github.com Flutter Source: github.com Kivy Source: github.com  Bloc: State management for Dart: bloclibrary.dev Swift Package Manager (SwiftPM): swift.org Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3537005,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/3Nd5flCCd4DZ34XW39HOM6"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/3Nd5flCCd4DZ34XW39HOM6",\n      "html_description" : "Are you building a mobile app and wondering where Python fits in the mix? Are you support others building these apps with backend APIs written in Python? Can you write your entire app, end to end, in Python? I have a great panel put together to discuss exactly this. And they all have a different and unique take on the options. Welcome to Loren Aguey, Harout Boujakjian, Andr\xc3\xa9as K\xc3\xbchne, Jeyfrin and, Joshua.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/sentry\\" rel=\\"nofollow\\">Sentry Error Monitoring, Code TALKPYTHON</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Guests<br /><br/>Loren Aguey: <a href=\\"https://www.linkedin.com/in/loren-aguey-51827947/\\" rel=\\"nofollow\\">linkedin.com</a><br /><br/>Harout Boujakjian: <a href=\\"https://www.linkedin.com/in/harout-boujakjian/\\" rel=\\"nofollow\\">linkedin.com</a><br /><br/>Andr\xc3\xa9as K\xc3\xbchne: <a href=\\"https://www.linkedin.com/in/andreas-kuhne/\\" rel=\\"nofollow\\">linkedin.com</a><br /><br/>Jeyfrin, Joshua<br /><br/><br /><br/>Talk Python Mobile App: <a href=\\"https://training.talkpython.fm/apps\\" rel=\\"nofollow\\">training.talkpython.fm/apps</a><br /><br/>Epic Skies App: <a href=\\"https://play.google.com/store/apps/details?id&#61;com.blackcatdev.epic_skies\\" rel=\\"nofollow\\">play.google.com</a><br /><br/>PinPlanet App: <a href=\\"https://pinplanetapp.com\\" rel=\\"nofollow\\">pinplanetapp.com</a><br /><br/>My Club App: <a href=\\"https://apps.apple.com/se/app/myclub/id1627271862\\" rel=\\"nofollow\\">apps.apple.com</a><br /><br/>vid3d App: <a href=\\"https://play.google.com/store/apps/details?id&#61;org.moonpyx.vision\\" rel=\\"nofollow\\">play.google.com</a><br /><br/><br /><br/>Flutter: <a href=\\"https://flutter.dev\\" rel=\\"nofollow\\">flutter.dev</a><br /><br/>Flutter Showcase: <a href=\\"https://flutter.dev/showcase\\" rel=\\"nofollow\\">flutter.dev</a><br /><br/><br /><br/>pub.dev, Flutter&#39;s PyPI: <a href=\\"https://pub.dev\\" rel=\\"nofollow\\">pub.dev</a><br /><br/>FastAPI: <a href=\\"https://fastapi.tiangolo.com\\" rel=\\"nofollow\\">fastapi.tiangolo.com</a><br /><br/>Litestar: <a href=\\"https://litestar.dev\\" rel=\\"nofollow\\">litestar.dev</a><br /><br/>Pyramid Web Framework: <a href=\\"https://trypyramid.com\\" rel=\\"nofollow\\">trypyramid.com</a><br /><br/>Flask: <a href=\\"https://flask.palletsprojects.com/en/3.0.x/\\" rel=\\"nofollow\\">flask.palletsprojects.com</a><br /><br/>Django: <a href=\\"https://www.djangoproject.com\\" rel=\\"nofollow\\">djangoproject.com</a><br /><br/>Django REST Framework: <a href=\\"https://www.django-rest-framework.org\\" rel=\\"nofollow\\">django-rest-framework.org</a><br /><br/>Kivy: <a href=\\"https://kivy.org/\\" rel=\\"nofollow\\">kivy.org</a><br /><br/><br /><br/>Swift: <a href=\\"https://developer.apple.com/swift/resources/\\" rel=\\"nofollow\\">developer.apple.com</a><br /><br/>Ionic Framework: <a href=\\"https://ionicframework.com\\" rel=\\"nofollow\\">ionicframework.com</a><br /><br/>Ionic Source: <a href=\\"https://github.com/ionic-team/ionic-framework\\" rel=\\"nofollow\\">github.com</a><br /><br/>Flutter Source: <a href=\\"https://github.com/flutter/flutter\\" rel=\\"nofollow\\">github.com</a><br /><br/>Kivy Source: <a href=\\"https://github.com/kivy/kivy\\" rel=\\"nofollow\\">github.com</a><br /><br/><br /><br/>Bloc: State management for Dart: <a href=\\"https://bloclibrary.dev/#/\\" rel=\\"nofollow\\">bloclibrary.dev</a><br /><br/>Swift Package Manager (SwiftPM): <a href=\\"https://www.swift.org/package-manager/\\" rel=\\"nofollow\\">swift.org</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;kYkJIjj9pbI\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/434/building-mobile-apps-backed-with-python\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "3Nd5flCCd4DZ34XW39HOM6",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#434: Building Mobile Apps Backed with Python",\n      "release_date" : "2023-10-19",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:3Nd5flCCd4DZ34XW39HOM6"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/35gfHkw05eTpAkA9nwJg8l/clip_659050_709250.mp3",\n      "description" : "We all know about Flask and Django. And of course FastAPI made a huge splash when it came on the scene a few years ago. But new web frameworks are being created all the time. And they have these earlier frameworks to borrow from as well. On this episode we dive into a new framework gaining a lot of traction called Litestar. Will it be the foundation of your next project? Join me as I get to know Litestar with its maintainers: Jacob Coffee, Janek Nouvertn\xc3\xa9, and Cody Fincher.  Episode sponsors  Sentry Error Monitoring, Code TALKPYTHON Talk Python Courses  Links from the show  Guests Jacob Coffee Jacob on Github: github.com Jacob on Twitter: @_scriptr Jacob on Mastodon: @Monorepo  Cody Fincher Cody on LinkedIn: linkedin.com Cody on GitHub: github.com Email: cody.fincher@gmail.com  Janek Nouvertn\xc3\xa9 Janek on GitHub: github.com Email: j.a.nouvertne@posteo.de  Litestar: litestar.dev Litestar Documentation: litestar.dev Litestar on Twitter: @LitestarAPI Litestar on Mastodon: @litestar Litestar Blog: blog.litestar.dev Discord: discord.gg Reddit r/Litestar: eddit.com Litestar on PyPI: pypi.org Benchmarks: docs.litestar.dev v2.0 Release: github.com gunicorn: gunicorn.org msgspec: github.com httpx-sse: github.com duckdb: duckdb.org rich-click: github.com blacksheep server: neoteroi.dev Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3895431,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/2F5RBVcuoMjipJjP9giHUy"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/2F5RBVcuoMjipJjP9giHUy",\n      "html_description" : "We all know about Flask and Django. And of course FastAPI made a huge splash when it came on the scene a few years ago. But new web frameworks are being created all the time. And they have these earlier frameworks to borrow from as well. On this episode we dive into a new framework gaining a lot of traction called Litestar. Will it be the foundation of your next project? Join me as I get to know Litestar with its maintainers: Jacob Coffee, Janek Nouvertn\xc3\xa9, and Cody Fincher.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/sentry\\" rel=\\"nofollow\\">Sentry Error Monitoring, Code TALKPYTHON</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Guests<br /><br/>Jacob Coffee<br /><br/>Jacob on Github: <a href=\\"https://github.com/JacobCoffee/\\" rel=\\"nofollow\\">github.com</a><br /><br/>Jacob on Twitter: <a href=\\"https://twitter.com/_scriptr\\" rel=\\"nofollow\\">&#64;_scriptr</a><br /><br/>Jacob on Mastodon: <a href=\\"https://fosstodon.org/&#64;Monorepo\\" rel=\\"nofollow\\">&#64;Monorepo</a><br /><br/><br /><br/>Cody Fincher<br /><br/>Cody on LinkedIn: <a href=\\"https://www.linkedin.com/in/cody-fincher-89179a19\\" rel=\\"nofollow\\">linkedin.com</a><br /><br/>Cody on GitHub: <a href=\\"https://github.com/cofin/\\" rel=\\"nofollow\\">github.com</a><br /><br/>Email: <a href=\\"mailto://cody.fincher&#64;gmail.com\\" rel=\\"nofollow\\">cody.fincher&#64;gmail.com</a><br /><br/><br /><br/>Janek Nouvertn\xc3\xa9<br /><br/>Janek on GitHub: <a href=\\"https://github.com/provinzkraut/\\" rel=\\"nofollow\\">github.com</a><br /><br/>Email: <a href=\\"mailto://j.a.nouvertne&#64;posteo.de\\" rel=\\"nofollow\\">j.a.nouvertne&#64;posteo.de</a><br /><br/><br /><br/>Litestar: <a href=\\"https://litestar.dev/\\" rel=\\"nofollow\\">litestar.dev</a><br /><br/>Litestar Documentation: <a href=\\"https://docs.litestar.dev/2/\\" rel=\\"nofollow\\">litestar.dev</a><br /><br/>Litestar on Twitter: <a href=\\"https://twitter.com/LitestarAPI/\\" rel=\\"nofollow\\">&#64;LitestarAPI</a><br /><br/>Litestar on Mastodon: <a href=\\"https://fosstodon.org/&#64;litestar\\" rel=\\"nofollow\\">&#64;litestar</a><br /><br/>Litestar Blog: <a href=\\"https://blog.litestar.dev/\\" rel=\\"nofollow\\">blog.litestar.dev</a><br /><br/>Discord: <a href=\\"https://discord.gg/MmcwxztmQb\\" rel=\\"nofollow\\">discord.gg</a><br /><br/>Reddit r/Litestar: <a href=\\"https://www.reddit.com/r/litestar\\" rel=\\"nofollow\\">eddit.com</a><br /><br/>Litestar on PyPI: <a href=\\"https://pypi.org/project/litestar/\\" rel=\\"nofollow\\">pypi.org</a><br /><br/>Benchmarks: <a href=\\"https://docs.litestar.dev/2/benchmarks.html\\" rel=\\"nofollow\\">docs.litestar.dev</a><br /><br/>v2.0 Release: <a href=\\"https://github.com/litestar-org/litestar/releases/tag/v2.0.0\\" rel=\\"nofollow\\">github.com</a><br /><br/>gunicorn: <a href=\\"https://gunicorn.org\\" rel=\\"nofollow\\">gunicorn.org</a><br /><br/>msgspec: <a href=\\"https://github.com/jcrist/msgspec/\\" rel=\\"nofollow\\">github.com</a><br /><br/>httpx-sse: <a href=\\"https://github.com/florimondmanca/httpx-sse\\" rel=\\"nofollow\\">github.com</a><br /><br/>duckdb: <a href=\\"https://duckdb.org\\" rel=\\"nofollow\\">duckdb.org</a><br /><br/>rich-click: <a href=\\"https://github.com/ewels/rich-click\\" rel=\\"nofollow\\">github.com</a><br /><br/>blacksheep server: <a href=\\"https://www.neoteroi.dev/blacksheep/\\" rel=\\"nofollow\\">neoteroi.dev</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;8gnB4ToIkQg\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/433/litestar-effortlessly-build-performant-apis\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "2F5RBVcuoMjipJjP9giHUy",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#433: Litestar: Effortlessly Build Performant APIs",\n      "release_date" : "2023-10-15",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:2F5RBVcuoMjipJjP9giHUy"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/6PBzk6HcYJlxcoIzhcwtFu/clip_497174_565260.mp3",\n      "description" : "By now, surely you\'ve heard how awesome Pydantic version 2 is. The team led by Samual Colvin spent almost a year refactoring and reworking the core into a high-performance Rust version while keeping the public API in Python and largely unchanged. The main benefit of this has been massive speed ups for frameworks and devs using Pydantic.    But just how much work is it to take a framework deeply built on Pydantic and make that migration? What are some of the pitfalls? On this episode, we welcome back Roman Right to talk about his experience converting Beanie, the popular MongoDB async framework based on Pydantic, from Pydantic v1 to v2. And we\'ll have some fun talking MongoDB as well while we are at it.   Episode sponsors  Studio 3T Talk Python Courses  Links from the show  Beanie: beanie-odm.dev Beanie on GitHub: github.com Roman on Twitter: @roman_the_right Beanie Release 1.21.0: github.com Talk Python\'s MongoDB with Async Python Course: talkpython.fm Pydantic Migration Guide: docs.pydantic.dev  Customizing validation with __get_pydantic_core_schema__: docs.pydantic.dev Bunnet (Sync Beanie): github.com Generic `typing.ForwardRef` to support generic recursive types: discuss.python.org Pydantic v2 - The Plan Episode: talkpython.fm Future of Pydantic and FastAPI episode: talkpython.fm Beanie Lazy Parsing: beanie-odm.dev Beanie Relationships: beanie-odm.dev Locust Load Testing: locust.io motor package: pypi.org Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3233700,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/5EqaBq4KblYe3OgHB2atP3"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/5EqaBq4KblYe3OgHB2atP3",\n      "html_description" : "By now, surely you&#39;ve heard how awesome Pydantic version 2 is. The team led by Samual Colvin spent almost a year refactoring and reworking the core into a high-performance Rust version while keeping the public API in Python and largely unchanged. The main benefit of this has been massive speed ups for frameworks and devs using Pydantic.<br/><br /><br/><br /><br/>But just how much work is it to take a framework deeply built on Pydantic and make that migration? What are some of the pitfalls? On this episode, we welcome back Roman Right to talk about his experience converting Beanie, the popular MongoDB async framework based on Pydantic, from Pydantic v1 to v2. And we&#39;ll have some fun talking MongoDB as well while we are at it.<br/><br /><br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/studio2023\\" rel=\\"nofollow\\">Studio 3T</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Beanie: <a href=\\"https://beanie-odm.dev\\" rel=\\"nofollow\\">beanie-odm.dev</a><br /><br/>Beanie on GitHub: <a href=\\"https://github.com/roman-right/beanie\\" rel=\\"nofollow\\">github.com</a><br /><br/>Roman on Twitter: <a href=\\"https://twitter.com/roman_the_right\\" rel=\\"nofollow\\">&#64;roman_the_right</a><br /><br/>Beanie Release 1.21.0: <a href=\\"https://github.com/roman-right/beanie/releases/tag/1.21.0\\" rel=\\"nofollow\\">github.com</a><br /><br/>Talk Python&#39;s MongoDB with Async Python Course: <a href=\\"https://training.talkpython.fm/courses/mongodb-with-async-python-beanie-and-pydantic\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/>Pydantic Migration Guide: <a href=\\"https://docs.pydantic.dev/2.0/migration/\\" rel=\\"nofollow\\">docs.pydantic.dev</a><br /><br/><br /><br/>Customizing validation with __get_pydantic_core_schema__: <a href=\\"https://docs.pydantic.dev/latest/usage/types/custom/#customizing-validation-with-__get_pydantic_core_schema__\\" rel=\\"nofollow\\">docs.pydantic.dev</a><br /><br/>Bunnet (Sync Beanie): <a href=\\"https://github.com/roman-right/bunnet\\" rel=\\"nofollow\\">github.com</a><br /><br/>Generic &#96;typing.ForwardRef&#96; to support generic recursive types: <a href=\\"https://discuss.python.org/t/generic-typing-forwardref-to-support-generic-recursive-types/20168\\" rel=\\"nofollow\\">discuss.python.org</a><br /><br/>Pydantic v2 - The Plan Episode: <a href=\\"https://talkpython.fm/episodes/show/376/pydantic-v2-the-plan\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/>Future of Pydantic and FastAPI episode: <a href=\\"https://talkpython.fm/episodes/show/415/future-of-pydantic-and-fastapi\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/>Beanie Lazy Parsing: <a href=\\"https://beanie-odm.dev/tutorial/lazy-parsing/\\" rel=\\"nofollow\\">beanie-odm.dev</a><br /><br/>Beanie Relationships: <a href=\\"https://beanie-odm.dev/tutorial/relations/\\" rel=\\"nofollow\\">beanie-odm.dev</a><br /><br/>Locust Load Testing: <a href=\\"https://locust.io\\" rel=\\"nofollow\\">locust.io</a><br /><br/>motor package: <a href=\\"https://pypi.org/project/motor/\\" rel=\\"nofollow\\">pypi.org</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;HCUXwzU9FW4\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/432/migrating-to-pydantic-2.0-beanie-for-mongodb\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "5EqaBq4KblYe3OgHB2atP3",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#432: Migrating to Pydantic 2.0: Beanie for MongoDB",\n      "release_date" : "2023-10-06",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:5EqaBq4KblYe3OgHB2atP3"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/4rhK0TVbeu6MipjhFpBekz/clip_1885650_1939400.mp3",\n      "description" : "Every year Python has a new major release. This year it\'s Python 3.12 and it\'ll come out on October 2, 2023. That\'s 4 days from when this episode was published. There is quite process involved to test, build, and ship Python across many platforms and channels. We have Seth Michael Larson here to give us a detailed rundown on what exactly is involved in releasing CPython.  Episode sponsors  PyCharm Talk Python Courses  Links from the show  Seth on Mastodon: fosstodon.org/@sethmlarson Seth on Twitter: @sethmlarson Seth on Github: github.com Announcing Security Developer-in-Residence: sethmlarson.dev Visualizing the CPython Release Process: sethmlarson.dev PEP 101: peps.python.org CPython on Github: github.com Best Open SSF: best.openssf.org pip-audit: github.com PyPA Advisory Database: github.com Omnivore App: omnivore.app What\'s New in 3.12: docs.python.org release-tools package: github.com  Talk Python\'s HTMX + Django course: talkpython.fm/htmx-django Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3731536,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/79OgtAymXNNj47ebrBFb2a"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/79OgtAymXNNj47ebrBFb2a",\n      "html_description" : "Every year Python has a new major release. This year it&#39;s Python 3.12 and it&#39;ll come out on October 2, 2023. That&#39;s 4 days from when this episode was published. There is quite process involved to test, build, and ship Python across many platforms and channels. We have Seth Michael Larson here to give us a detailed rundown on what exactly is involved in releasing CPython.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/done-with-pycharm\\" rel=\\"nofollow\\">PyCharm</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Seth on Mastodon: <a href=\\"https://fosstodon.org/&#64;sethmlarson\\" rel=\\"nofollow\\">fosstodon.org/&#64;sethmlarson</a><br /><br/>Seth on Twitter: <a href=\\"https://twitter.com/sethmlarson\\" rel=\\"nofollow\\">&#64;sethmlarson</a><br /><br/>Seth on Github: <a href=\\"https://github.com/sethmlarson\\" rel=\\"nofollow\\">github.com</a><br /><br/>Announcing Security Developer-in-Residence: <a href=\\"https://sethmlarson.dev/security-developer-in-residence-weekly-report-1\\" rel=\\"nofollow\\">sethmlarson.dev</a><br /><br/>Visualizing the CPython Release Process: <a href=\\"https://sethmlarson.dev/security-developer-in-residence-weekly-report-9\\" rel=\\"nofollow\\">sethmlarson.dev</a><br /><br/>PEP 101: <a href=\\"https://peps.python.org/pep-0101/\\" rel=\\"nofollow\\">peps.python.org</a><br /><br/>CPython on Github: <a href=\\"https://github.com/python/cpython\\" rel=\\"nofollow\\">github.com</a><br /><br/>Best Open SSF: <a href=\\"https://best.openssf.org\\" rel=\\"nofollow\\">best.openssf.org</a><br /><br/>pip-audit: <a href=\\"https://github.com/pypa/pip-audit\\" rel=\\"nofollow\\">github.com</a><br /><br/>PyPA Advisory Database: <a href=\\"https://github.com/pypa/advisory-database\\" rel=\\"nofollow\\">github.com</a><br /><br/>Omnivore App: <a href=\\"https://omnivore.app\\" rel=\\"nofollow\\">omnivore.app</a><br /><br/>What&#39;s New in 3.12: <a href=\\"https://docs.python.org/3.12/whatsnew/3.12.html\\" rel=\\"nofollow\\">docs.python.org</a><br /><br/>release-tools package: <a href=\\"https://github.com/python/release-tools\\" rel=\\"nofollow\\">github.com</a><br /><br/><br /><br/>Talk Python&#39;s HTMX &#43; Django course: <a href=\\"https://talkpython.fm/htmx-django\\" rel=\\"nofollow\\">talkpython.fm/htmx-django</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;0fw2wKCS9B4\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/431/visualizing-cpython-release-process\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "79OgtAymXNNj47ebrBFb2a",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#431: Visualizing CPython Release Process",\n      "release_date" : "2023-09-29",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:79OgtAymXNNj47ebrBFb2a"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/7y07RKi9LhupKvQ12gmZat/clip_2163593_2227464.mp3",\n      "description" : "So, you\'ve got this amazing machine learning model you created. And you want to share it and let your colleagues and users experiment with it on the web. How do you get started? Learning Flask or Django? Great frameworks, but you might consider Gradio which is a rapid development UI framework for ML models. On this episode, we have Freddy Boulton, to introduce us all to Gradio.  Episode sponsors  PyCharm Sentry Error Monitoring, Code TALKPYTHON Talk Python Courses  Links from the show  Freddy on Twitter: @freddy_alfonso_ Gradio: gradio.app Use as API Example: huggingface.co Components: gradio.app Svelte: svelte.dev Flutter UI/Code structure: docs.flutter.dev XKCD Matplotlib Theme: matplotlib.org Gradio XKCD Full Theme: huggingface.co  PrivateGPT: ai.meta.com Langchain: docs.langchain.com pipdeptree: pypi.org Watch this episode on YouTube: youtube.com Episode transcripts: talkpython.fm  --- Stay in touch with us --- Subscribe to us on YouTube: youtube.com Follow Talk Python on Mastodon: talkpython Follow Michael on Mastodon: mkennedy",\n      "duration_ms" : 3583056,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/3dqs9ofK5IuVCT6xrHIlUS"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/3dqs9ofK5IuVCT6xrHIlUS",\n      "html_description" : "So, you&#39;ve got this amazing machine learning model you created. And you want to share it and let your colleagues and users experiment with it on the web. How do you get started? Learning Flask or Django? Great frameworks, but you might consider Gradio which is a rapid development UI framework for ML models. On this episode, we have Freddy Boulton, to introduce us all to Gradio.<br /><br/><br /><br/>Episode sponsors<br /><br/><br /><br/><a href=\\"https://talkpython.fm/done-with-pycharm\\" rel=\\"nofollow\\">PyCharm</a><br /><br/><a href=\\"https://talkpython.fm/sentry\\" rel=\\"nofollow\\">Sentry Error Monitoring, Code TALKPYTHON</a><br /><br/><a href=\\"https://talkpython.fm/training\\" rel=\\"nofollow\\">Talk Python Courses</a><br /><br/><br /><br/>Links from the show<br /><br/><br /><br/>Freddy on Twitter: <a href=\\"https://twitter.com/freddy_alfonso_\\" rel=\\"nofollow\\">&#64;freddy_alfonso_</a><br /><br/>Gradio: <a href=\\"https://www.gradio.app\\" rel=\\"nofollow\\">gradio.app</a><br /><br/>Use as API Example: <a href=\\"https://huggingface.co/spaces/fffiloni/Music-To-Image\\" rel=\\"nofollow\\">huggingface.co</a><br /><br/>Components: <a href=\\"https://www.gradio.app/docs/components\\" rel=\\"nofollow\\">gradio.app</a><br /><br/>Svelte: <a href=\\"https://svelte.dev\\" rel=\\"nofollow\\">svelte.dev</a><br /><br/>Flutter UI/Code structure: <a href=\\"https://docs.flutter.dev/ui/layout/tutorial\\" rel=\\"nofollow\\">docs.flutter.dev</a><br /><br/>XKCD Matplotlib Theme: <a href=\\"https://matplotlib.org/stable/gallery/showcase/xkcd.html#sphx-glr-gallery-showcase-xkcd-py\\" rel=\\"nofollow\\">matplotlib.org</a><br /><br/>Gradio XKCD Full Theme: <a href=\\"https://huggingface.co/spaces/gstaff/xkcd\\" rel=\\"nofollow\\">huggingface.co</a><br /><br/><br /><br/>PrivateGPT: <a href=\\"https://github.com/imartinez/privateGPT\\" rel=\\"nofollow\\">ai.meta.com</a><br /><br/>Langchain: <a href=\\"https://docs.langchain.com/docs/\\" rel=\\"nofollow\\">docs.langchain.com</a><br /><br/>pipdeptree: <a href=\\"https://pypi.org/project/pipdeptree/\\" rel=\\"nofollow\\">pypi.org</a><br /><br/>Watch this episode on YouTube: <a href=\\"https://www.youtube.com/watch?v&#61;3hOFoLKXKYA\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Episode transcripts: <a href=\\"https://talkpython.fm/episodes/transcript/430/delightful-machine-learning-apps-with-gradio\\" rel=\\"nofollow\\">talkpython.fm</a><br /><br/><br /><br/>--- Stay in touch with us ---<br /><br/>Subscribe to us on YouTube: <a href=\\"https://talkpython.fm/youtube\\" rel=\\"nofollow\\">youtube.com</a><br /><br/>Follow Talk Python on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;talkpython\\" rel=\\"nofollow\\">talkpython</a><br /><br/>Follow Michael on Mastodon: <a href=\\"https://fosstodon.org/web/&#64;mkennedy\\" rel=\\"nofollow\\">mkennedy</a><br />",\n      "id" : "3dqs9ofK5IuVCT6xrHIlUS",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#430: Delightful Machine Learning Apps with Gradio",\n      "release_date" : "2023-09-19",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:3dqs9ofK5IuVCT6xrHIlUS"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/7zTxfMNoZpjX3Evw7SlwXR/clip_1159974_1215149.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/429",\n      "duration_ms" : 4140428,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/04fEMjtQuLOvRZozUZ3nBJ"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/04fEMjtQuLOvRZozUZ3nBJ",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/429\\" rel=\\"nofollow\\">talkpython.fm/429</a>",\n      "id" : "04fEMjtQuLOvRZozUZ3nBJ",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#429: Taming Flaky Tests",\n      "release_date" : "2023-09-11",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:04fEMjtQuLOvRZozUZ3nBJ"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/0zEXzxzKdLngl8mIKoCeon/clip_1762050_1809840.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/428",\n      "duration_ms" : 4189700,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/5TfxbvHgBFG7DhdI2hkL9t"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/5TfxbvHgBFG7DhdI2hkL9t",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/428\\" rel=\\"nofollow\\">talkpython.fm/428</a>",\n      "id" : "5TfxbvHgBFG7DhdI2hkL9t",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#428: Django Trends in 2023",\n      "release_date" : "2023-08-29",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:5TfxbvHgBFG7DhdI2hkL9t"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/4eOLmuLQH3eRmFMxjjJ50K/clip_2084400_2152700.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/427",\n      "duration_ms" : 3966398,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/5DIclchqC4YK9jhAlxDtJY"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/5DIclchqC4YK9jhAlxDtJY",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/427\\" rel=\\"nofollow\\">talkpython.fm/427</a>",\n      "id" : "5DIclchqC4YK9jhAlxDtJY",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#427: 10 Tips and Ideas for the Beginner to Expert Python Journey",\n      "release_date" : "2023-08-19",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:5DIclchqC4YK9jhAlxDtJY"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/0IfKZxwIw1sJgZGsbGGazx/clip_1660400_1729200.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/426",\n      "duration_ms" : 3899699,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/5qUmLmlOeJcniRo5S4PfVD"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/5qUmLmlOeJcniRo5S4PfVD",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/426\\" rel=\\"nofollow\\">talkpython.fm/426</a>",\n      "id" : "5qUmLmlOeJcniRo5S4PfVD",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#426: What\'s New in PyScript [August 2023]",\n      "release_date" : "2023-08-09",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:5qUmLmlOeJcniRo5S4PfVD"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/0o21Napr15b6HKMHiGKlt7/clip_2558439_2609441.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/425",\n      "duration_ms" : 4227886,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/4EIXA5xLn9xNFbUcS3JX5T"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/4EIXA5xLn9xNFbUcS3JX5T",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/425\\" rel=\\"nofollow\\">talkpython.fm/425</a>",\n      "id" : "4EIXA5xLn9xNFbUcS3JX5T",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#425: Memray: The endgame Python memory profiler",\n      "release_date" : "2023-08-04",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:4EIXA5xLn9xNFbUcS3JX5T"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/0ZJNXnbzrROyjgdUuAn7p4/clip_2298232_2372748.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/424",\n      "duration_ms" : 3862311,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/6DTjSbOOl5ZdeaXa7jijOZ"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/6DTjSbOOl5ZdeaXa7jijOZ",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/424\\" rel=\\"nofollow\\">talkpython.fm/424</a>",\n      "id" : "6DTjSbOOl5ZdeaXa7jijOZ",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#424: Shiny for Python",\n      "release_date" : "2023-07-27",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:6DTjSbOOl5ZdeaXa7jijOZ"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/01bFQd7hnoqFNisX1ueyvT/clip_1501050_1559550.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/423",\n      "duration_ms" : 3991600,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/4hmb2EPzJglgVTAS3D14lI"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/4hmb2EPzJglgVTAS3D14lI",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/423\\" rel=\\"nofollow\\">talkpython.fm/423</a>",\n      "id" : "4hmb2EPzJglgVTAS3D14lI",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#423: Solving 10 different simulation problems with Python",\n      "release_date" : "2023-07-24",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:4hmb2EPzJglgVTAS3D14lI"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/5fogGDnrPM1E9j6tR29qfh/clip_861759_924655.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/422",\n      "duration_ms" : 3736121,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/4RpzaambMOrOPON39oXcp6"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/4RpzaambMOrOPON39oXcp6",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/422\\" rel=\\"nofollow\\">talkpython.fm/422</a>",\n      "id" : "4RpzaambMOrOPON39oXcp6",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#422: How data scientists use Python",\n      "release_date" : "2023-07-07",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:4RpzaambMOrOPON39oXcp6"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/3h0I7feA1dZNAHXBu8nL64/clip_1575485_1626237.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/421",\n      "duration_ms" : 3845964,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/5Dghm9iiM8Rl8xIF9TM14c"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/5Dghm9iiM8Rl8xIF9TM14c",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/421\\" rel=\\"nofollow\\">talkpython.fm/421</a>",\n      "id" : "5Dghm9iiM8Rl8xIF9TM14c",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#421: Python at Netflix",\n      "release_date" : "2023-07-02",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:5Dghm9iiM8Rl8xIF9TM14c"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/70bLVfafgGeZetLC6JxXDN/clip_2313300_2374200.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/420",\n      "duration_ms" : 3362076,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/6VKJyFvlT8up29n9gX2IKo"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/6VKJyFvlT8up29n9gX2IKo",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/420\\" rel=\\"nofollow\\">talkpython.fm/420</a>",\n      "id" : "6VKJyFvlT8up29n9gX2IKo",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#420: Database Consistency & Isolation for Python Devs",\n      "release_date" : "2023-06-26",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:6VKJyFvlT8up29n9gX2IKo"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/3p0ccOBCpkQ4cwv2F7M6fX/clip_2521331_2570309.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/419",\n      "duration_ms" : 4342546,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/6FeH0mK3SVamKVJFPv0zon"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/6FeH0mK3SVamKVJFPv0zon",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/419\\" rel=\\"nofollow\\">talkpython.fm/419</a>",\n      "id" : "6FeH0mK3SVamKVJFPv0zon",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#419: Debugging Python in Production with PyStack",\n      "release_date" : "2023-06-14",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:6FeH0mK3SVamKVJFPv0zon"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/5uabtmhkU43VAMNPBPvoev/clip_3435616_3481395.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/418",\n      "duration_ms" : 4030574,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/2l2ba5bakJ0dMS4TGugLbU"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/2l2ba5bakJ0dMS4TGugLbU",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/418\\" rel=\\"nofollow\\">talkpython.fm/418</a>",\n      "id" : "2l2ba5bakJ0dMS4TGugLbU",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#418: How To Keep A Secret in Python Apps",\n      "release_date" : "2023-06-02",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:2l2ba5bakJ0dMS4TGugLbU"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/0shGyejDcOPBhiTLR7vMzV/clip_3038700_3108600.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/417",\n      "duration_ms" : 4476061,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/23KnJioMMbeZR3OUNdQOiT"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/23KnJioMMbeZR3OUNdQOiT",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/417\\" rel=\\"nofollow\\">talkpython.fm/417</a>",\n      "id" : "23KnJioMMbeZR3OUNdQOiT",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#417: Test-Driven Prompt Engineering for LLMs with Promptimize",\n      "release_date" : "2023-05-30",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:23KnJioMMbeZR3OUNdQOiT"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/0i29lnTaFPplmicNkBJN2w/clip_911100_978350.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/416",\n      "duration_ms" : 3449181,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/6FGhdsFmOOIT4PZGm9Eqas"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/6FGhdsFmOOIT4PZGm9Eqas",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/416\\" rel=\\"nofollow\\">talkpython.fm/416</a>",\n      "id" : "6FGhdsFmOOIT4PZGm9Eqas",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#416: Open Source Sports Analytics with PySport",\n      "release_date" : "2023-05-22",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:6FGhdsFmOOIT4PZGm9Eqas"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/4bH943S2lP4Yyb24hHLHvX/clip_1856650_1919750.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/415",\n      "duration_ms" : 3005425,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/13wPzTy8J4Qf6leEDytwBE"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/13wPzTy8J4Qf6leEDytwBE",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/415\\" rel=\\"nofollow\\">talkpython.fm/415</a>",\n      "id" : "13wPzTy8J4Qf6leEDytwBE",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#415: Future of Pydantic and FastAPI",\n      "release_date" : "2023-05-15",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:13wPzTy8J4Qf6leEDytwBE"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/2ms3KI0rBmfUgCRqcUDaXp/clip_2687400_2740800.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/414",\n      "duration_ms" : 3166827,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/50wj2EcUH0lso7RIeMV6IF"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/50wj2EcUH0lso7RIeMV6IF",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/414\\" rel=\\"nofollow\\">talkpython.fm/414</a>",\n      "id" : "50wj2EcUH0lso7RIeMV6IF",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#414: A Stroll Down Startup Lane",\n      "release_date" : "2023-05-07",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:50wj2EcUH0lso7RIeMV6IF"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/0A6gvp3mwMkM3f1oO5nAae/clip_2347550_2393800.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/413",\n      "duration_ms" : 2839890,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/4DU3h4bkJO4e3tmwDYAb3s"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/4DU3h4bkJO4e3tmwDYAb3s",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/413\\" rel=\\"nofollow\\">talkpython.fm/413</a>",\n      "id" : "4DU3h4bkJO4e3tmwDYAb3s",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#413: Live from PyCon 2023",\n      "release_date" : "2023-04-26",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:4DU3h4bkJO4e3tmwDYAb3s"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/4npxNQbj0CEZylSftQIZVn/clip_1442500_1493200.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/412",\n      "duration_ms" : 4700083,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/3mBodtUELz3TaBYzXBcJVC"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/3mBodtUELz3TaBYzXBcJVC",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/412\\" rel=\\"nofollow\\">talkpython.fm/412</a>",\n      "id" : "3mBodtUELz3TaBYzXBcJVC",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#412: PEP 711 - Distributing Python Binaries",\n      "release_date" : "2023-04-19",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:3mBodtUELz3TaBYzXBcJVC"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/3l7Wu4OIgtxxk82JLGyA0v/clip_735900_794500.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/411",\n      "duration_ms" : 3824693,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/7pw03CF5c7HphynB9nI5iH"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/7pw03CF5c7HphynB9nI5iH",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/411\\" rel=\\"nofollow\\">talkpython.fm/411</a>",\n      "id" : "7pw03CF5c7HphynB9nI5iH",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#411: Things I Wish Someone Had Explained To Me Sooner About Python",\n      "release_date" : "2023-04-14",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:7pw03CF5c7HphynB9nI5iH"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/7tQbUn7bGgWT6LzQYrS7tn/clip_2405950_2455600.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/410",\n      "duration_ms" : 3938101,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/1jYIen32vdpTtlrAHBZ7K6"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/1jYIen32vdpTtlrAHBZ7K6",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/410\\" rel=\\"nofollow\\">talkpython.fm/410</a>",\n      "id" : "1jYIen32vdpTtlrAHBZ7K6",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#410: The Intersection of Tabular Data and Generative AI",\n      "release_date" : "2023-04-06",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:1jYIen32vdpTtlrAHBZ7K6"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/3lw7MjdSwR0D4DkuLN9OgI/clip_1476050_1529500.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/409",\n      "duration_ms" : 4080764,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/2SudPjlDSTETyXqArrz1Th"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/2SudPjlDSTETyXqArrz1Th",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/409\\" rel=\\"nofollow\\">talkpython.fm/409</a>",\n      "id" : "2SudPjlDSTETyXqArrz1Th",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#409: Privacy as Code with Fides",\n      "release_date" : "2023-04-01",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:2SudPjlDSTETyXqArrz1Th"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/4KYG52iAlgCbyQ74FEEkaq/clip_2936800_3018800.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/408",\n      "duration_ms" : 3779091,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/51MTm0gvHdkcADogdNGB4M"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/51MTm0gvHdkcADogdNGB4M",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/408\\" rel=\\"nofollow\\">talkpython.fm/408</a>",\n      "id" : "51MTm0gvHdkcADogdNGB4M",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#408: Hatch: A Modern Python Workflow",\n      "release_date" : "2023-03-24",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:51MTm0gvHdkcADogdNGB4M"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/6eG11D7CJsAP6rdEZ3Lv7E/clip_591950_637550.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/407",\n      "duration_ms" : 3382381,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/2rBBJAGMJaPfWcb3lhORbl"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/2rBBJAGMJaPfWcb3lhORbl",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/407\\" rel=\\"nofollow\\">talkpython.fm/407</a>",\n      "id" : "2rBBJAGMJaPfWcb3lhORbl",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#407: pytest tips and tricks for better testing",\n      "release_date" : "2023-03-18",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:2rBBJAGMJaPfWcb3lhORbl"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/1EQ3vLEAFkCp7zhOwgO68c/clip_1047500_1094300.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/406",\n      "duration_ms" : 4000516,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/3RIaY4PM7h4mO2IaD0eSXo"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/3RIaY4PM7h4mO2IaD0eSXo",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/406\\" rel=\\"nofollow\\">talkpython.fm/406</a>",\n      "id" : "3RIaY4PM7h4mO2IaD0eSXo",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#406: Reimagining Python\'s Packaging Workflows",\n      "release_date" : "2023-03-12",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:3RIaY4PM7h4mO2IaD0eSXo"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/14CWUAYD0d9tznLRKb8f6E/clip_2775900_2842300.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/405",\n      "duration_ms" : 3560693,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/2MyW1TBnmjc5ej7y3hhkJO"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/2MyW1TBnmjc5ej7y3hhkJO",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/405\\" rel=\\"nofollow\\">talkpython.fm/405</a>",\n      "id" : "2MyW1TBnmjc5ej7y3hhkJO",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#405: Testing in Radio Astronomy with Python and pytest",\n      "release_date" : "2023-03-03",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:2MyW1TBnmjc5ej7y3hhkJO"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/0WQKWVh8N41cC5Wb8AIKST/clip_3271700_3323000.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/404",\n      "duration_ms" : 3800429,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/4SUhFEk2imZCHTQ7yCDLsc"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/4SUhFEk2imZCHTQ7yCDLsc",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/404\\" rel=\\"nofollow\\">talkpython.fm/404</a>",\n      "id" : "4SUhFEk2imZCHTQ7yCDLsc",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#404: Clean Code in Python",\n      "release_date" : "2023-02-20",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:4SUhFEk2imZCHTQ7yCDLsc"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/3wXbZ4FYrEFrB5ra9AfPXP/clip_3183206_3240055.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/403",\n      "duration_ms" : 3881702,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/0wJzn0suDsn5ZGwT97si7C"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/0wJzn0suDsn5ZGwT97si7C",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/403\\" rel=\\"nofollow\\">talkpython.fm/403</a>",\n      "id" : "0wJzn0suDsn5ZGwT97si7C",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#403: Fusion Ignition Breakthrough and Python",\n      "release_date" : "2023-02-13",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:0wJzn0suDsn5ZGwT97si7C"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/1X7QgH7wm1z1Y3B9IDO7xx/clip_2573900_2630700.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/402",\n      "duration_ms" : 3581950,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/4KYuclURr5oWTyZlZXoVSG"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/4KYuclURr5oWTyZlZXoVSG",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/402\\" rel=\\"nofollow\\">talkpython.fm/402</a>",\n      "id" : "4KYuclURr5oWTyZlZXoVSG",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#402: Polars: A Lightning-fast DataFrame for Python [updated audio]",\n      "release_date" : "2023-02-08",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:4KYuclURr5oWTyZlZXoVSG"\n    }, {\n      "audio_preview_url" : "https://podz-content.spotifycdn.com/audio/clips/29gR5YnFPz1usbnDpVDZ4q/clip_585100_631400.mp3",\n      "description" : "See the full show notes for this episode on the website at talkpython.fm/401",\n      "duration_ms" : 3656778,\n      "explicit" : false,\n      "external_urls" : {\n        "spotify" : "https://open.spotify.com/episode/1TIN5BtIBKH7KTw2PetFcs"\n      },\n      "href" : "https://api.spotify.com/v1/episodes/1TIN5BtIBKH7KTw2PetFcs",\n      "html_description" : "See the full show notes for this episode on the website at <a href=\\"https://talkpython.fm/401\\" rel=\\"nofollow\\">talkpython.fm/401</a>",\n      "id" : "1TIN5BtIBKH7KTw2PetFcs",\n      "images" : [ {\n        "height" : 640,\n        "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n        "width" : 640\n      }, {\n        "height" : 300,\n        "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n        "width" : 300\n      }, {\n        "height" : 64,\n        "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n        "width" : 64\n      } ],\n      "is_externally_hosted" : false,\n      "is_playable" : true,\n      "language" : "en-US",\n      "languages" : [ "en-US" ],\n      "name" : "#401: Migrating 3.8 Million Lines of Python",\n      "release_date" : "2023-02-02",\n      "release_date_precision" : "day",\n      "type" : "episode",\n      "uri" : "spotify:episode:1TIN5BtIBKH7KTw2PetFcs"\n    } ],\n    "limit" : 50,\n    "next" : "https://api.spotify.com/v1/shows/6Ol9sx1lONDxBSffLW9qcZ/episodes?offset=50&limit=50",\n    "offset" : 0,\n    "previous" : null,\n    "total" : 449\n  },\n  "explicit" : false,\n  "external_urls" : {\n    "spotify" : "https://open.spotify.com/show/6Ol9sx1lONDxBSffLW9qcZ"\n  },\n  "href" : "https://api.spotify.com/v1/shows/6Ol9sx1lONDxBSffLW9qcZ",\n  "html_description" : "Talk Python to Me is a weekly podcast hosted by developer and entrepreneur Michael Kennedy. We dive deep into the popular packages and software developers, data scientists, and incredible hobbyists doing amazing things with Python. If you&#39;re new to Python, you&#39;ll quickly learn the ins and outs of the community by hearing from the leaders. And if you&#39;ve been Pythoning for years, you&#39;ll learn about your favorite packages and the hot new ones coming out of open source.",\n  "id" : "6Ol9sx1lONDxBSffLW9qcZ",\n  "images" : [ {\n    "height" : 640,\n    "url" : "https://i.scdn.co/image/ab6765630000ba8ab5c9ca9fb91b19eb5dc7367d",\n    "width" : 640\n  }, {\n    "height" : 300,\n    "url" : "https://i.scdn.co/image/ab67656300005f1fb5c9ca9fb91b19eb5dc7367d",\n    "width" : 300\n  }, {\n    "height" : 64,\n    "url" : "https://i.scdn.co/image/ab6765630000f68db5c9ca9fb91b19eb5dc7367d",\n    "width" : 64\n  } ],\n  "is_externally_hosted" : false,\n  "languages" : [ "en-US" ],\n  "media_type" : "audio",\n  "name" : "Talk Python To Me",\n  "publisher" : "Michael Kennedy (@mkennedy)",\n  "total_episodes" : 449,\n  "type" : "show",\n  "uri" : "spotify:show:6Ol9sx1lONDxBSffLW9qcZ"\n}'

    test = Sympyfy()._Sympyfy__make_show(json_content)  # type: ignore

    assert test
    assert test.episodes.total == 449
    assert len(test.episodes.items) == 50

    assert test.name == "Talk Python To Me"
    assert test.total_episodes == 449
